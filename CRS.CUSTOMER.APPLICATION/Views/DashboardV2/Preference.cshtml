@model List<CRS.CUSTOMER.APPLICATION.Models.DashboardV2.ClubAvailabilityDetailModel>
@{
    ViewBag.Title = "Preference";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var LocationId = ViewBag.LocationId?.ToString();
    var TypeValue = ViewBag.TypeValue?.ToString();
    var types = new string[] { "", "", "", "", "" };

    if (!string.IsNullOrEmpty(TypeValue))
    {
        int index;
        if (int.TryParse(TypeValue, out index) && index >= 0 && index < types.Length)
        {
            types[index] = "checked";
        }
    }
}
<style>
    input[type=radio]:checked + label {
        color: #D75A8B;
        font-weight: 600;
    }

    input[type=radio]:checked {
        appearance: none;
        -webkit-appearance: none;
        border-radius: 50%;
        background: #D75A8B;
        border: 3px solid #FFF;
        box-shadow: 0 0 0 4px #D75A8B;
        width: 13px;
        height: 13px;
    }

    input[type=radio] {
        box-shadow: 0 0 0 4px rgba(102, 102, 102, 0.2);
        /*    border: 1.5px solid rgba(102, 102, 102, 0.2);*/
        appearance: none;
        -webkit-appearance: none;
        border-radius: 50%;
        width: 13px;
        height: 13px;
    }
</style>
<div class="flex items-center  border-b border-b-[#E8E8E8] sticky top-0 bg-white z-[10] relative px-4 py-[10px] h-[44px]" onclick="window.location.href='@Url.Action("Index","DashboardV2")'">
    <div class="flex gap-2 items-center absolute top-[12px] text-sm">
        <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
            <path d="M15.2347 2.74084C14.7855 2.29167 14.0614 2.29167 13.6122 2.74084L5.99469 10.3583C5.63719 10.7158 5.63719 11.2933 5.99469 11.6508L13.6122 19.2683C14.0614 19.7175 14.7855 19.7175 15.2347 19.2683C15.6839 18.8192 15.6839 18.095 15.2347 17.6458L8.59802 11L15.2439 4.35417C15.6839 3.91417 15.6839 3.18084 15.2347 2.74084Z"
                  fill="#BCB08A" />
        </svg>@CRS.CUSTOMER.APPLICATION.Resources.Resource.Back
    </div>
    <div class="text-center w-full font-bold"></div>
</div>
<!-- radio button  -->
<section class='px-4 py-3 border border-b border-[#E6E6E6]'>

    <div class='grid grid-cols-2 '>
        <div class='flex flex-col gap-2'>
            <div class='flex gap-[10px] items-center' onclick="PreferenceRedirect('@ApplicationUtilities.EncryptParameter("0").ToString()');">
                <input class="custom-radio" name="radio-group" type="radio" id='click' @types[0]>
                <label for='click' class='font-medium text-[14px] cl'>今すぐ行けるお店</label>
            </div>

            <div class='flex gap-[10px] items-center' onclick="PreferenceRedirect('@ApplicationUtilities.EncryptParameter("2").ToString()');">
                <input name="radio-group" type="radio" id='click2' @types[2]>
                <label for="click2" class='font-medium text-[14px] cl'>在籍人数が多い</label>
            </div>

            <div class='flex gap-[10px] items-center' onclick="PreferenceRedirect('@ApplicationUtilities.EncryptParameter("4").ToString()');">
                <input name="radio-group" type="radio" id='click4' @types[4]>
                <label for="click4" class=' font-medium text-[14px] cl'>女子会向き</label>
            </div>
        </div>

        <div class='flex flex-col gap-2'>

            <div class='flex gap-[10px] items-center' onclick="PreferenceRedirect('@ApplicationUtilities.EncryptParameter("1").ToString()');">
                <input name="radio-group" type="radio" id='click1' @types[1]>
                <label for="click1" class=' font-medium text-[14px] cl'>貸し切りOK</label>
            </div>

            <div class='flex gap-[10px] items-center' onclick="PreferenceRedirect('@ApplicationUtilities.EncryptParameter("3").ToString()');">
                <input name="radio-group" type="radio" id='click3' @types[3]>
                <label for="click3" class=' font-medium text-[14px] cl'>VIPルームあり</label>
            </div>
        </div>

    </div>
</section>
<div class='px-4 py-2 text-[12px] font-semibold bg-[#FDFBFA]'>
    検索結果 @(Model != null ? Model.Count() : 0) 件
</div>

@foreach (var item in Model)
{
    <section>
        <!-- tag section -->
        <div class="px-2 pt-[12px] pb-2 flex gap-1">
            @if (!string.IsNullOrEmpty(@item.Tag1))
            {
                <div class="px-1 border-[1px] text-[10px] rounded-[2px] text-[#A09E91] flex justify-start items-center  gap-[2px]">
                    <span>
                        <svg xmlns="http://www.w3.org/2000/svg" width="11" height="10" viewBox="0 0 11 10" fill="none">
                            <path fill-rule="evenodd" clip-rule="evenodd"
                                  d="M2.6875 3.75C2.6875 2.20093 3.95093 0.9375 5.5 0.9375C7.04907 0.9375 8.3125 2.20093 8.3125 3.75C8.3125 4.18945 8.13428 4.6936 7.89258 5.24414C7.65088 5.79468 7.3396 6.37939 7.02344 6.92383C6.39111 8.01392 5.75391 8.92578 5.75391 8.92578L5.5 9.29688L5.24609 8.92578C5.24609 8.92578 4.60889 8.01392 3.97656 6.92383C3.6604 6.37939 3.34912 5.79468 3.10742 5.24414C2.86572 4.6936 2.6875 4.18945 2.6875 3.75ZM5.5 3.125C5.15454 3.125 4.875 3.40454 4.875 3.75C4.875 4.09546 5.15454 4.375 5.5 4.375C5.84546 4.375 6.125 4.09546 6.125 3.75C6.125 3.40454 5.84546 3.125 5.5 3.125Z"
                                  fill="#D75A8B" />
                        </svg>
                    </span>
                    <span class='pr-[6px]'>@item.Tag1</span>
                </div>
            }
            @if (!string.IsNullOrEmpty(item.Tag2))
            {
                <div class="px-[5px] py-[1px] bg-[#BFA3B6] text-[10px] rounded-[2px] text-white">@item.Tag2</div>
            }
            @if (!string.IsNullOrEmpty(item.Tag3))
            {
                <div class="px-[5px] py-[1px] bg-[#697DBF] text-[10px] rounded-[2px] text-white">@item.Tag3</div>
            }
            @if (!string.IsNullOrEmpty(item.Tag4))
            {
                <div class="px-[5px] py-[1px] bg-[#96B41F] text-[10px] rounded-[2px] text-white">@item.Tag4</div>
            }
            @if (!string.IsNullOrEmpty(item.Tag5))
            {
                <div class="px-[5px] py-[1px] bg-[#EFB726] text-[10px] rounded-[2px] text-white">@item.Tag5</div>
            }
        </div>

        <!-- section 2 -->

        <div class="px-4 pb-[8px] flex justify-between ">
            <div class="flex gap-[8px]">
                <div data-modal-target="defaultModal" data-modal-toggle="defaultModal" onclick="ClubDetailActionFunction('@item.ClubLocationId', '@item.ClubId')">
                    <img src="@item.ClubLogo"
                         class="h-[48px] w-[48px] object-cover rounded-full border-[1px] border-[#FAFAFA]" />
                </div>
                <div>
                    <div class='text-sm font-bold text-charcolBlack '>@item.ClubNameEnglish</div>
                    <div class='text-xs  text-[#404040] '>@item.ClubNameJapanese</div>
                    <div class="text-[10px] text-[#E3A1A1]">@item.GroupName</div>
                </div>
            </div>
            <div class="flex flex-col  items-center   ">
                @if (!string.IsNullOrEmpty(item.IsBookmarked.ToUpper()) && item.IsBookmarked.ToUpper() == "Y")
                {
                    <div class="flex flex-col  items-center px-3 hover:cursor-pointer"
                         onclick="handleRemoveBookmarks('@item.ClubId','','club')">
                        <img src="~/Content/assets/images/bookmark-filled.svg" class="h-[20px] w-[25px]" style="height:24px; width:24px" />
                    </div>
                }
                else
                {
                    <div class="flex flex-col  items-center px-3 hover:cursor-pointer"
                         onclick="handleAddBookmarks('@item.ClubId','','club')">
                        <img src="~/Content/assets/images/bookmark-notfilled.svg" class="h-[20px] w-[25px]" style="height:24px; width:24px" />
                    </div>
                }
                <div style="line-height: 100%;" class="text-[9px] text-[#BCB08A] ">
                    保存
                </div>
            </div>
        </div>

        <!-- section 3 -->

        <div class='flex overflow-hidden'>
            @foreach (var item2 in item.HostGalleryImage)
            {
                <img class="w-1/3 h-[120px]" src="@item2" alt="img" style="object-fit:cover">
            }
        </div>

        <!-- section 4 rating -->
        <div class="px-4 py-[12px]">
            <div class="flex gap-[14px] pb-2">
                <div class="flex  text-base  items-center">
                    @{
                        var unratedScale = (5 - item.AverageRating);
                        for (int i = 0; i < item.AverageRating; i++)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                                <path d="M16.3496 6.76224L10.8673 6.18327L8.62306 1.14941L6.37878 6.18327L0.896484 6.76224L4.99136 10.4529L3.84816 15.8446L8.62306 13.0909L13.398 15.8446L12.2548 10.4529L16.3496 6.76224Z"
                                      fill="#F89336" />
                            </svg>
                        }
                        for (int i = 0; i < unratedScale; i++)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="19" height="18" viewBox="0 0 19 18" fill="none">
                                <g opacity="0.3">
                                    <path d="M9.44368 1.14551L8.95524 2.25712L7.2036 6.18147L2.92556 6.63622L1.71289 6.77096L2.6224 7.57941L5.80566 10.4595L4.913 14.6702L4.66036 15.8492L5.72145 15.2428L9.44368 13.087L13.1659 15.2428L14.227 15.8492L13.9744 14.6702L13.0817 10.4595L16.265 7.57941L17.1745 6.77096L15.9618 6.63622L11.6838 6.18147L9.93212 2.25712L9.44368 1.14551ZM9.44368 3.78981L10.8248 6.9057L10.9595 7.19203L11.2627 7.22571L14.6481 7.57941L12.1217 9.85317L11.8859 10.0721L11.9532 10.3753L12.6606 13.6933L9.71316 12.009L9.44368 11.8406L9.1742 12.009L6.22673 13.6933L6.93412 10.3753L7.00149 10.0721L6.76569 9.85317L4.23929 7.57941L7.62467 7.22571L7.92784 7.19203L8.06258 6.9057L9.44368 3.78981Z"
                                          fill="#C8B477" />
                                </g>
                            </svg>
                        }
                    }
                    <div class="text-[#333] text-[12px] font-normal " style="line-height: 18px;">@item.AverageRating</div>
                </div>
                <div class="flex gap-1 text-base items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none">
                        <path d="M1.52539 2.90918V12.8488H6.35188L8.07085 14.5455L9.78981 12.8488H14.6163V2.90918H1.52539ZM2.53238 3.90314H13.6093V11.8549H9.37286L8.07085 13.14L6.76884 11.8549H2.53238V3.90314ZM4.54637 5.39409V6.38805H11.5953V5.39409H4.54637ZM4.54637 7.38202V8.37598H11.5953V7.38202H4.54637ZM4.54637 9.36994V10.3639H9.58134V9.36994H4.54637Z"
                              fill="#BCB08A" />
                    </svg>
                    <div class="text-[#333] text-[12px] font-normal">@item.TotalComment</div>

                </div>
            </div>
            <div class="text-[12px] font-normal leading-[18px] self-stretch	text-[#333]">
                @item.ClubDescription
            </div>
        </div>

        <!-- book now section  -->

        <div class="px-4 py-[12px] flex justify-between items-center">
            <div>
                @if (!string.IsNullOrEmpty(@item.ClubOpeningTime) && !string.IsNullOrEmpty(@item.ClubClosingTime))
                {
                    <div class="flex justify-center items-center gap-1 pb-1">
                        @if (!string.IsNullOrEmpty(@item.ClubTimePeriod) && @item.ClubTimePeriod.Trim().ToUpper() == "DAY")
                        {
                            <div class="h-4 w-4 rounded-[2px] bg-[#F89336] flex justify-center items-center">
                                <img src="~/Content/assets/images/customer/sun.svg" />
                            </div>
                        }
                        else if (!string.IsNullOrEmpty(@item.ClubTimePeriod) && @item.ClubTimePeriod.Trim().ToUpper() == "NIGHT")
                        {
                            <div class="h-4 w-4 rounded-[2px] bg-[#F89336] flex justify-center items-center">
                                <img src="~/Content/assets/images/customer/moon.svg" />
                            </div>
                        }
                        <div class="text-sm text-secondary-1">@item.ClubOpeningTime~@item.ClubClosingTime</div>
                    </div>
                    if (!string.IsNullOrEmpty(item.TodaysClubSchedule) && item.TodaysClubSchedule.Trim().ToUpper() == "RESERVABLE")
                    {
                        <div class="bg-[#BCB08A] text-white text-xs h-[18px] flex items-center justify-center">
                            @CRS.CUSTOMER.APPLICATION.Resources.Resource.Reservable
                        </div>
                    }
                    else
                    {
            <div class="bg-[#D7D7D7] text-white text-xs h-[18px] flex items-center justify-center">
                @CRS.CUSTOMER.APPLICATION.Resources.Resource.Reservable
            </div>
                    }
                }
            </div>
            <button class="btn-gradient text-[14px] font-semibold tracking-[0.56px] leading-[21px]" onclick="InitiateClubReservationFunction('@item.ClubId')">
                今すぐ予約する
                @*@CRS.CUSTOMER.APPLICATION.Resources.Resource.Book_Now*@
            </button>
        </div>
    </section>
}

@section scripts
{
    <script>
        function PreferenceRedirect(Type) {
            window.location.href = `/DashboardV2/Preference?LocationId=@LocationId&Type=${Type}`;
        }

        function closeImagePopup() {
            var modal = document.getElementById("myModal");
            modal.style.display = "none";
        }

        function handleAddBookmarks(clubId, hostId, agentType) {
            EnableLoaderFunction();
            $.ajax({
                url: '/BookmarkManagement/AddBookmarks',
                type: 'POST',
                data: { clubId: clubId, hostId: hostId, agentType: agentType },
                success: function (result) {
                    if (result.success) {
                        location.reload();
                    } else {
                        location.reload();
                    }
                },
                error: function () {
                    location.reload();
                }
            });
        }

        function handleRemoveBookmarks(clubId, hostId, agentType) {
            EnableLoaderFunction();
            $.ajax({
                url: '/BookmarkManagement/RemoveBookmarks',
                type: 'POST',
                data: { clubId: clubId, hostId: hostId, agentType: agentType },
                success: function (result) {
                    if (result.success) {
                        location.reload();
                    } else {
                        location.reload();
                    }
                },
                error: function () {
                    location.reload();
                }
            });
        }

        function ClubDetailActionFunction(i, j) {
            window.location.href = "/LocationManagement/ClubDetail_V2?LocationId=" + i + "&&ClubId=" + j;
        }
    </script>
}
