@model CRS.CUSTOMER.APPLICATION.Models.SearchV2.SearchV2FilterClubTabModel
<div id="tab1" class="tab-content-plane">
    <form method="post" id="club-filter-form-id" hidden>
        <input type="search" id="club-search" name="SearchFilter" hidden>
        <input type="text" class="location-class" id="LocationId_1" name="LocationId" value="" hidden />
        <input type="text" id="club-category-id" name="ClubCategory" value="" hidden />
        <input type="text" id="price-id" name="Price" value="" hidden />
        <input type="text" id="time-type-id" name="Shift" value="" hidden />
        <input type="text" id="time-id" name="Time" value="" hidden />
        <input type="text" id="clubavailability-id" name="ClubAvailability" value="" hidden />
    </form>
    <!--#region host-club.php-->
    <div class="pb-12">
        <div class="py-2">
            <div class="text-sm text-[#333] font-bold mb-[13px]">
                エリアから探す
            </div>
            <div class="flex flex-col mt-[8px] gap-[13px]">
                @foreach (var item in Model.LocationModel)
                {
                    var Label = item.StaticLabel.Split('/');
                    var activeClass = (!string.IsNullOrEmpty(ViewBag.PrefecturesArea) && item.StaticValue.Trim() == ViewBag.PrefecturesArea) ? "active" : string.Empty;
                    <div class="select-location-store select-loaction-host text-[#333] text-sm @activeClass" id="club-location-id">
                        <div class="square">
                        </div>
                        <div class="flex gap-1">
                            <div class="locationValue font-bold" data-info="@item.StaticValue" data-info-2="@Label[0]">
                                @Label[0]/
                            </div> <span>@Label[1]</span>

                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- 店舗カテゴリーから探す -->
        <div class="flex flex-col gap-[13px] mt-2">
            <div class="">
                <div class="text-sm text-[#333] font-bold mb-2">
                    店舗カテゴリーから探す
                </div>
                <form class="search-field-selection">
                    <div class="flex flex-col w-full ">
                        <div class="flex flex-row flex-wrap  gap-[24px]">
                            @foreach (var item in Model.ClubCategoryModel)
                            {
                                <div class="preferance">
                                    <input type="checkbox" id="ClubCategoryModel_@item.StaticValue" name="search-by-store-category" value="@item.StaticValue" class="club-category-class">
                                    <label for="ClubCategoryModel_@item.StaticValue" class="w-[88px]">@item.StaticLabel</label>
                                </div>
                            }

                        </div>

                    </div>
                </form>
            </div>
            <div class="">
                <div class="text-sm text-[#333] font-bold mb-2">
                    料金
                </div>
                <form class="search-field-selection ">
                    <div class="flex flex-col   w-full ">
                        <div class="flex flex-row flex-wrap  gap-[24px]">
                            @foreach (var item in Model.PlanPriceModel)
                            {
                                <div class="preferance">
                                    <input type="checkbox" id="PlanPriceModel_@item.StaticValue" class="plan-price-class hidden" name="search-by-plan" value="@item.StaticValue">
                                    <label for="PlanPriceModel_@item.StaticValue" class="w-[88px]">@item.StaticLabel</label>
                                </div>
                            }
                        </div>
                    </div>
                </form>
            </div>
            <div class="border-y-[1px] border-[#EFEFEF] py-[10px]">
                <div class="text-sm text-[#333] font-bold mb-2">
                    営業時間から探す
                </div>
                <div class="flex flex-row mt-[8px] gap-6 mb-4">
                    <div class="search-by-business-hours search-by-business-hours-select text-[#333] text-sm">
                        <div class="">
                            <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                 viewBox="0 0 13 13" fill="none">
                                <circle cx="6.5" cy="6.5" r="5" stroke="#666666" stroke-opacity="0.4" stroke-width="2" />
                            </svg>
                            <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                 viewBox="0 0 13 13" fill="none">
                                <circle cx="6.5" cy="6.5" r="5" stroke="#D75A8B" stroke-width="2" />
                                <circle cx="6.4987" cy="6.4987" r="2.66667" fill="#D75A8B" />
                            </svg>
                        </div>
                        <div class="searchbybusinesshoursValue text-sm text-[#333]" data-info="@ApplicationUtilities.EncryptParameter("1").ToString()">昼</div>
                    </div>
                    <div class="search-by-business-hours search-by-business-hours-select text-[#333] text-sm ">
                        <div class="">
                            <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                 viewBox="0 0 13 13" fill="none">
                                <circle cx="6.5" cy="6.5" r="5" stroke="#666666" stroke-opacity="0.4" stroke-width="2" />
                            </svg>
                            <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                 viewBox="0 0 13 13" fill="none">
                                <circle cx="6.5" cy="6.5" r="5" stroke="#D75A8B" stroke-width="2" />
                                <circle cx="6.4987" cy="6.4987" r="2.66667" fill="#D75A8B" />
                            </svg>
                        </div>
                        <div class="searchbybusinesshoursValue text-sm text-[#333]" data-info="@ApplicationUtilities.EncryptParameter("2").ToString()">夜</div>
                    </div>
                    <div class="search-by-business-hours search-by-business-hours-select text-[#333] text-sm contains-time-class">
                        <div class="">
                            <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                 viewBox="0 0 13 13" fill="none">
                                <circle cx="6.5" cy="6.5" r="5" stroke="#666666" stroke-opacity="0.4" stroke-width="2" />
                            </svg>
                            <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                 viewBox="0 0 13 13" fill="none">
                                <circle cx="6.5" cy="6.5" r="5" stroke="#D75A8B" stroke-width="2" />
                                <circle cx="6.4987" cy="6.4987" r="2.66667" fill="#D75A8B" />
                            </svg>
                        </div>
                        <div class="searchbybusinesshoursValue text-sm text-[#333]" data-info="@ApplicationUtilities.EncryptParameter("3").ToString()">時間を指定する</div>
                    </div>

                </div>
                <!--#region time-index.php-->
                <div class="relative" id="time-div-id" style="display:none;">
                    <div class=" showTimeList h-[32px] w-[72px] px-3 py-1 bg-[#F6F6F6] rounded-[4px] text-[#666] text-xs flex justify-between items-center">
                        <div id="selected-time-id">
                            01:00
                        </div>
                        <div>
                            <svg xmlns="http://www.w3.org/2000/svg" width="8" height="5" viewBox="0 0 8 5" fill="none">
                                <path d="M4 5L0.535898 0.5L7.4641 0.5L4 5Z" fill="#666666" />
                            </svg>
                        </div>
                    </div>
                    <div id="timeListContainer" class=" timeListContainer rounded-[4px] bg-[#F6F6F6] w-[72px]" style="display: none;">
                        @for (int i = 0; i <= 23; i++)
                        {
                            <div class="timeList  h-[32px]  px-3 py-1 text-[#666] text-xs flex justify-between items-center">
                                @{
                                    var timeValue = i.ToString("00") + ":00";
                                    <div class="timeValue" data-info="@ApplicationUtilities.EncryptParameter(timeValue).ToString()">
                                        @timeValue
                                    </div>
                                }
                                <div class="activeTime">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12" fill="none">
                                        <path d="M8.94643 3L4.88393 7.31494L3.05357 5.37077L2.25 6.22238L4.48214 8.59236L4.88393 9L5.28571 8.59236L9.75 3.8524L8.94643 3Z"
                                              fill="#666666" />
                                    </svg>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <!--#endregion time-index.php-->
            </div>
            <div>
                <div class="flex flex-col mt-[8px] gap-6 mb-4">
                    <div class="multi-select text-[#333] text-sm">
                        <div class="multi-select-value text-sm text-[#333]" data-value="@ApplicationUtilities.EncryptParameter("0").ToString()">今すぐ行けるお店</div>
                        <div class="">
                            <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                 viewBox="0 0 25 24" fill="none">
                                <circle opacity="0.4" cx="12.5" cy="12" r="7" stroke="#666666" stroke-opacity="0.4"
                                        stroke-width="4" />
                            </svg>
                            <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                 viewBox="0 0 25 24" fill="none">
                                <circle cx="12.5" cy="12" r="7.5" stroke="#D75A8B" stroke-width="3" />
                                <circle cx="12.5" cy="12" r="4" fill="#D75A8B" />
                            </svg>
                        </div>
                    </div>
                </div>
                @foreach (var item in Model.ClubAvailabilityModel)
                {
                    <div class="flex flex-col mt-[8px] gap-6 mb-4">
                        <div class="multi-select text-[#333] text-sm ">
                            <div class="multi-select-value text-sm text-[#333]" data-value="@item.StaticValue">@item.StaticLabel</div>
                            <div class="">
                                <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                     viewBox="0 0 25 24" fill="none">
                                    <circle opacity="0.4" cx="12.5" cy="12" r="7" stroke="#666666" stroke-opacity="0.4"
                                            stroke-width="4" />
                                </svg>
                                <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                     viewBox="0 0 25 24" fill="none">
                                    <circle cx="12.5" cy="12" r="7.5" stroke="#D75A8B" stroke-width="3" />
                                    <circle cx="12.5" cy="12" r="4" fill="#D75A8B" />
                                </svg>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="responsiveButton flex gap-4 py-4 items-center fixed bottom-0 left-0 w-full px-4 bg-white ">
        <button class="btn bg-[#E4E4E4] " onclick="ClearFunction();">
            条件をクリア
        </button>
        <button class="btn btn-primary" onclick="ClubFilterSubmitButton();">
            <a class=" w-full">
                検索する
            </a>
        </button>
    </div>
    <!--#endregion host-club.php-->
</div>
<script>
    var divs = document.querySelectorAll('.select-location-store');

    divs.forEach(function (div) {
        div.addEventListener('click', function () {
            // Remove the 'bg-red' class from all divs
            divs.forEach(function (d) {
                d.classList.remove('active');

            });
            // Add the 'bg-red' class to the clicked div
            this.classList.add('active');
        });
    });

    var searchbybusinesshours = document.querySelectorAll('.search-by-business-hours');
    searchbybusinesshours.forEach(function (div) {
        div.addEventListener('click', function () {
            // Check if the clicked div already has the 'active' class
            const isActive = this.classList.contains('active');

            // Remove the 'active' class from all divs
            searchbybusinesshours.forEach(function (d) {
                d.classList.remove('active');
            });

            // Toggle the 'active' class based on its previous state
            if (!isActive) {
                this.classList.add('active');
            }

            // Conditionally display the 'time-div-id' based on the presence of 'active' and 'contains-time-class'
            var div = document.getElementById('time-div-id');
            if (this.classList.contains('active') && this.classList.contains('contains-time-class')) {
                div.style.display = 'block';
            } else {
                div.style.display = 'none';
            }

            // Reset the value of '#time-type-id' if no div has 'active' class
            var activeDivExists = Array.from(searchbybusinesshours).some(d => d.classList.contains('active'));
            if (activeDivExists) {
                // Get the text content of the specific element within the active div
                var searchbybusinesshoursSelectValue = this.querySelector('.searchbybusinesshoursValue');
                $('#time-type-id').val(searchbybusinesshoursSelectValue.getAttribute('data-info'));
            } else {
                $('#time-type-id').val(''); // Reset or set to a default value
            }
        });
    });

    var showTimeLists = document.querySelectorAll('.showTimeList');

    showTimeLists.forEach(function (showTimeList) {
        showTimeList.addEventListener('click', function (event) {
            var timeList = showTimeList.nextElementSibling;
            if (timeList.style.display === "none" || timeList.style.display === "") {
                timeList.style.display = "block";
            } else {
                timeList.style.display = "none";
            }
            event.stopPropagation(); // Prevents the click event from bubbling up to the document
        });
    });

    document.addEventListener('click', function (event) {
        // Loop through each showTimeList
        showTimeLists.forEach(function (showTimeList) {
            var timeList = showTimeList.nextElementSibling;
            // Check if the click target is not the showTimeList, its timeList, or their descendants and close the timeList if it's open
            if (!showTimeList.contains(event.target) && !timeList.contains(event.target) && timeList.style
                .display === "block") {
                timeList.style.display = "none";
            }
        });
    });

    document.querySelectorAll('.timeList').forEach(item => {
        item.addEventListener('click', event => {
            if (event.currentTarget.classList.contains('disabled')) {
                return;
            }

            document.querySelectorAll('.timeList').forEach(item => {
                item.classList.remove('active');
            });
            event.currentTarget.classList.add('active');

            // Store the value if timeList has active class
            if (event.currentTarget.classList.contains('active')) {
                const timeValueElement = event.currentTarget.querySelector('.timeValue');
                if (timeValueElement) {
                    var timeValue = timeValueElement.getAttribute('data-info');
                    var selectedTimeDiv = document.getElementById("selected-time-id");
                    selectedTimeDiv.innerText = timeValueElement.innerHTML;
                    $('#time-id').val(timeValue.trim());
                }
            }
        });
    });

    var multiSelectValues = [];

    var multiSelect = document.querySelectorAll('.multi-select ');
    multiSelect.forEach(function (div) {
        // Get the value of the multi-select option
        var value = div.querySelector('.multi-select-value').innerText;

        // Check if the option has the 'active' class
        if (div.classList.contains('active')) {
            // If it's active, add its value to the array
            multiSelectValues.push(value);
        }
    });

    // Add event listener to each multiSelect div
    multiSelect.forEach(function (div) {
        div.addEventListener('click', function () {
            // Toggle 'active' class for the clicked div
            this.classList.toggle('active');

            // Get the value of the clicked option
            var value = this.querySelector('.multi-select-value').getAttribute('data-value');

            // Check if the option is selected or deselected
            if (this.classList.contains('active')) {
                // If selected, add the value to the array
                multiSelectValues.push(value);
            } else {
                // If deselected, remove the value from the array
                var index = multiSelectValues.indexOf(value);
                if (index !== -1) {
                    multiSelectValues.splice(index, 1);
                }
            }
            $('#clubavailability-id').val(multiSelectValues);
        });
    });

</script>