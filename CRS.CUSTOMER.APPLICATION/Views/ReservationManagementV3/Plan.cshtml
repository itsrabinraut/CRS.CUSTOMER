@model CRS.CUSTOMER.APPLICATION.Models.ReservationManagementV2.PlanViewModel
@{
    ViewBag.Title = "プラン選択‖ ホスログ《 ホストクラブ初回来店・ネット予約》";
    Layout = "~/Views/Shared/_Reservation-Layout-V2.cshtml";
    var ClubDetailModel = Model.ClubDetailModel;

}
<style>

    @@media (min-width: 640px) {
        #planbutton {
            width: 375px;
            left: 50%;
            transform: translate(-50%, -50%);
            bottom: -40px;
        }

      /*  #planContent {
            padding-top: 8px;
        }*/
    }
</style>


<div id="planContent" class="flex flex-col justify-between h-screen relative pb-8">
    <div>
        <!-- header  -->
        <div class="flex items-center justify-between  pt-[13px] px-[14px] pb-[9px] border-b border-b-[#DCDCDC]">
            <div class="flex items-center gap-[10px] ">
                <div class="circle-border circle-frist-quater ">
                    <div class="text tracking-tight	">1/<span>4</span></div>
                </div>
                <div>
                    <div class="text-[13px] font-bold pb-[5px]">プラン選択</div>
                    <div class="text-[11px] text-[#7E6D5E]">予約するプランを選んでください</div>
                </div>
            </div>
            <div onclick="WindowHistoryBack();">
                <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26" fill="none">
                    <path d="M5.86328 4.69727L4.69531 5.86523L11.8301 13L4.69531 20.1348L5.86328 21.3027L12.998 14.168L20.1328 21.3027L21.3008 20.1348L14.166 13L21.3008 5.86523L20.1328 4.69727L12.998 11.832L5.86328 4.69727Z"
                          fill="#BCB08A" />
                </svg>
            </div>
        </div>
        <!-- header end  -->
        <div style="height: calc(100vh - 140px);" class="no-scrollbar overflow-y-scroll pb-4 ">
            <!-- image  -->
            <div class="px-[14px] py-3 grid gap-3">
                <div class="flex gap-[8px] p-[14px] bg-[#F6F6F6] border border-[#EAEAEA] rounded-[6px]">
                    <div data-modal-target="defaultModal" data-modal-toggle="defaultModal">
                        @if (!string.IsNullOrEmpty(Model.ClubDetailModel.ClubLogo))
                        {
                            <img src="@Model.ClubDetailModel.ClubLogo"
                                 class="h-[48px] w-[48px] object-cover rounded-full border-[2px] border-[#EAEAEA]" alt="image" />
                        }
                        else
                        {
                            <img src="~/Content/assets/images/customer/demo-image.jpeg"
                                 class="h-[48px] w-[48px] object-cover rounded-full border-[2px] border-[#EAEAEA]" alt="image" />
                        }
                    </div>
                    <div>
                        <div class='text-sm font-bold text-charcolBlack '>@Model.ClubDetailModel.ClubNameEnglish</div>
                        <div class='text-xs  text-[#404040] '> @Model.ClubDetailModel.ClubNameJapanese</div>
                        <div class="text-[10px] text-[#A09E91] flex gap-[2px] items-center">
                            <i class="fa-solid fa-location-dot text-primary"></i>
                            @Model.ClubDetailModel.ClubLocationName
                        </div>
                    </div>
                </div>
            </div>
            @if (Model.PlanDetailModel.Count > 0)
            {
                <div class="plan-selection">
                    @{
                        bool isFirstItem = true;
                        foreach (var item in Model.PlanDetailModel)
                        {
                            var amount = Convert.ToDecimal(item.PlanPrice).ToString("#,##0");
                            var sAmount = Convert.ToDecimal(item.StrikePrice).ToString("#,##0");

                            <div class="plan-card">
                                <input class="planid-class" value="@item.PlanId" hidden />
                                @if (isFirstItem)
                                {
                                    <input class="ispopularplan-class" value="y" hidden />
                                }
                                else
                                {
                                    <input class="ispopularplan-class" value="n" hidden />
                                }
                                <div>
                                    <div class="flex items-center gap-2 mb-[6px]">
                                        <div class="text-[13px] text-[#404040] font-bold leading-[24px] PlanName-class" data-info="@item.PlanName">
                                            @item.PlanName
                                        </div>
                                        @if (isFirstItem)
                                        {
                                            isFirstItem = false;
                                            <span class="popularity">
                                                <i class="las la-crown linear-gradient-text"></i>
                                                <div class="linear-gradient-text tracking-[1.26px] pl-1">人気</div>
                                            </span>
                                        }
                                    </div>
                                    @{
                                        if (item.IsStrikeOut == "A")
                                        {
                                            if (item.IsStrikeOut == "A")
                                            {
                                                <div class="IsStrikeOut" value="@item.IsStrikeOut" hidden></div>
                                            }
                                            else
                                            {
                                                <div class="IsStrikeOut" value="@item.IsStrikeOut" hidden></div>
                                            }
                                            <div class="strikethrough-wrapper">
                                                <div class="text-[#D75A8B] font-futura pb-[6px] StrikePrice-class strikethrough" data-info="@item.StrikePrice">
                                                    @string.Concat("¥", @sAmount)
                                                </div>
                                                <div class="text-[#D75A8B] font-futura pb-[6px] PlanPrice-class" style="font-size:16px; font-weight:600" data-info="@item.PlanPrice">
                                                    @string.Concat("¥", @amount)
                                                </div>

                                                <span>キャンペーン中</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="text-[#D75A8B] font-futura pb-[6px] PlanPrice-class" style="font-size:16px; font-weight:600" data-info="@item.PlanPrice">
                                                @string.Concat("¥", @amount)
                                            </div>
                                        }
                                    }
                                    @* <div class="strikethrough-wrapper">
                                            <div class="text-[#D75A8B] font-futura pb-[6px] PlanPrice-class" data-info="@item.PlanPrice">
                                                @string.Concat("¥", @amount)
                                            </div>
                                            <div class="text-[#D75A8B] font-futura pb-[6px] PlanPrice-class strikethrough" data-info="@item.PlanPrice">
                                                @string.Concat("¥", @amount)
                                            </div>
                                            <span>キャンペーン中</span>
                                        </div>*@
                                    <div class="flex items-center gap-2">
                                        <div class="flex gap-[3px]">
                                            <div class="text-[#D17979] text-[13px]">
                                                 @* <i class="las la-clock"></i>*@
                                                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="13" viewBox="0 0 13 13" fill="none">
                                                    <path d="M6.5 0C2.91569 0 0 2.91569 0 6.5C0 10.0843 2.91569 13 6.5 13C10.0843 13 13 10.0843 13 6.5C13 2.91569 10.0843 0 6.5 0ZM6.5 1.08333C9.49821 1.08333 11.9167 3.50179 11.9167 6.5C11.9167 9.49821 9.49821 11.9167 6.5 11.9167C3.50179 11.9167 1.08333 9.49821 1.08333 6.5C1.08333 3.50179 3.50179 1.08333 6.5 1.08333ZM5.95833 2.16667V7.04167H9.75V5.95833H7.04167V2.16667H5.95833Z" fill="#D17979" />
                                                </svg>
                                            </div>
                                            <div class="text-[11px] text-[#282828] font-futura PlanTime-class" style="line-height:100%; display:flex; align-items:end;" data-info="@item.PlanTime">
                                                @item.PlanTime
                                            </div>
                                        </div>

                                        <div class="flex items-end gap-[3px]">
                                            <div class="text-[#D17979] text-[13px]">
                                                @*<i class="las la-glass-cheers"></i>*@
                                                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="13" viewBox="0 0 15 13" fill="none">
                                                    <path d="M12.2377 0L11.7188 0.146433L7.60045 1.28536L7.09821 1.43179L7.19866 1.78974L3.33147 0.699624L2.8125 0.553191L2.66183 1.05757L1.15513 6.0363C0.973075 6.65253 0.862165 7.38877 1.07143 8.10263C1.24093 8.68023 1.66574 9.23545 2.32701 9.56696L1.84152 11.2753L0.301339 10.836L0 11.8448L4.1183 13L4.41964 11.9912L2.87946 11.5519L3.36496 9.85983C4.10575 9.9188 4.76284 9.65848 5.22321 9.25782C5.79241 8.76158 6.11258 8.10059 6.29464 7.48435L7.61719 3.18899L8.70536 6.94743V6.9637C8.88742 7.57994 9.20759 8.24093 9.77679 8.73717C10.2414 9.1419 10.8901 9.38595 11.635 9.3229L12.1205 11.0313L10.5804 11.4706L10.8817 12.4793L15 11.3242L14.6987 10.3154L13.1585 10.7547L12.6562 9.04631C13.3175 8.7148 13.7423 8.15957 13.9118 7.58198C14.1211 6.86812 14.0269 6.13188 13.8449 5.51564L12.3884 0.50438L12.2377 0ZM11.5179 1.28536L12.1875 3.61201H8.83929L8.42076 2.14768L11.5179 1.28536ZM3.54911 1.85482L6.62946 2.70088L6.1942 4.13267H2.84598L3.54911 1.85482ZM9.14062 4.65332H12.4888L12.8237 5.80851C12.9681 6.29255 13.0183 6.86812 12.8906 7.30538C12.763 7.74265 12.5202 8.04975 11.8694 8.23279C11.2186 8.41583 10.844 8.2755 10.4967 7.97247C10.1493 7.66943 9.87095 7.15488 9.72656 6.67084L9.14062 4.65332ZM2.5279 5.17397H5.87612L5.27344 7.19149H5.2567C5.11231 7.67553 4.85073 8.19008 4.50335 8.49312C4.15597 8.79615 3.78139 8.93648 3.13058 8.75344C2.47977 8.5704 2.23703 8.2633 2.10938 7.82603C1.98172 7.38877 2.03195 6.8132 2.17634 6.32916L2.5279 5.17397Z" fill="#D17979" />
                                                </svg>
                                            </div>
                                            <div class="text-[11px] text-[#282828] font-futura PlanLiquor-class flex items-end" style="line-height:100%;" data-info="@item.PlanLiquor">
                                                @item.PlanLiquorJapanese
                                            </div>
                                        </div>
                                        <div class="flex items-end gap-[3px]">
                                            <div class="text-[#D17979] text-[13px]">
                                                @* <i class="las la-user"></i>*@
                                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="13" viewBox="0 0 12 13" fill="none">
                                                    <path d="M6 0C3.68672 0 1.8 1.85813 1.8 4.13636C1.8 5.56055 2.53828 6.82546 3.65625 7.57102C1.51641 8.47585 0 10.5671 0 13H1.2C1.2 10.3825 3.34219 8.27273 6 8.27273C8.65781 8.27273 10.8 10.3825 10.8 13H12C12 10.5671 10.4836 8.47585 8.34375 7.57102C9.46172 6.82546 10.2 5.56055 10.2 4.13636C10.2 1.85813 8.31328 0 6 0ZM6 1.18182C7.66406 1.18182 9 2.49751 9 4.13636C9 5.77521 7.66406 7.09091 6 7.09091C4.33594 7.09091 3 5.77521 3 4.13636C3 2.49751 4.33594 1.18182 6 1.18182Z" fill="#D17979" />
                                                </svg>
                                            </div>
                                            <div class="text-[11px] text-[#282828] flex font-futura PlanNomination-class" style="line-height:100%; align-items:center" data-info="@item.PlanNomination">
                                                @string.Concat("場内指名", @item.PlanNomination, "名まで")
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="plan-check-icon">
                                    <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="40" height="40"
                                         viewBox="0 0 40 40" fill="none">
                                        <g filter="url(#filter0_d_2745_60280)">
                                            <circle cx="20" cy="20" r="13" fill="#D75A8B" />
                                        </g>
                                        <path d="M26.2665 15L17.4487 24.4457L13.7335 20.4658L13 21.2516L17.082 25.6242L17.4487 26L17.8155 25.6242L27 15.7857L26.2665 15Z"
                                              fill="white" />
                                        <defs>
                                            <filter id="filter0_d_2745_60280" x="0" y="0" width="40" height="40"
                                                    filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                                                <feFlood flood-opacity="0" result="BackgroundImageFix" />
                                                <feColorMatrix in="SourceAlpha" type="matrix"
                                                               values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                                                <feOffset />
                                                <feGaussianBlur stdDeviation="3.5" />
                                                <feComposite in2="hardAlpha" operator="out" />
                                                <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                                                <feBlend mode="normal" in2="BackgroundImageFix"
                                                         result="effect1_dropShadow_2745_60280" />
                                                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_2745_60280"
                                                         result="shape" />
                                            </filter>
                                        </defs>
                                    </svg>
                                    <svg class="inActive-svg" xmlns="http://www.w3.org/2000/svg" width="26" height="26"
                                         viewBox="0 0 26 26" fill="none">
                                        <circle cx="13" cy="13" r="12.5" fill="#F6F6F6" stroke="#DCDCDC" />
                                        <path d="M19.2665 8L10.4487 17.4457L6.73349 13.4658L6 14.2516L10.082 18.6242L10.4487 19L10.8155 18.6242L20 8.78571L19.2665 8Z"
                                              fill="#DCDCDC" />
                                    </svg>
                                </div>
                            </div>
                        }
                    }
                </div>
            }
            else
            {
                <div class="rounded-[4px] bg-[#FFEDED] p-2 flex justify-between gap-2 items-start">
                    <div class="text-base text-[#000] flex items-start">
                        <i class="las la-info-circle"></i>
                    </div>
                    <div class="text-xs text-[#000]">現在、プランはありません</div>
                </div>
            }
        </div>
    </div>
</div>

<div class="responsiveButtonPlan flex py-3 items-center fixed bottom-0 left-0 w-full px-4 bg-white"
     style="box-shadow: 0px -4px 9px 0px rgba(0, 0, 0, 0.04);">
    <button class="btn" onclick="WindowHistoryBack();">
        @CRS.CUSTOMER.APPLICATION.Resources.Resource.Cancel
    </button>
    @if (Model.PlanDetailModel.Count > 0)
    {
        <button class="btn btn-primary" onclick="SubmitFunction();">
            <a class=" w-full">
                次
            </a>
        </button>
    }
</div>
@section scripts
{
    <script src="~/Content/CustomHelper_v1.js"></script>
    <script>
        // Get all the div elements
        var divs = document.querySelectorAll('.plan-card');
        // Add click event listeners to each div
        divs.forEach(function (div) {
            div.addEventListener('click', function () {
                // Remove the 'bg-red' class from all divs
                divs.forEach(function (d) {
                    d.classList.remove('active');

                });
                // Add the 'bg-red' class to the clicked div
                this.classList.add('active');
            });
        });

        function SubmitFunction() {
            const activeElement = document.querySelector('.plan-selection .active');
            if (!activeElement) {
                toastr.info('プランを選択してください');
                    return false;

            }

            const PlanId = activeElement.querySelector('.planid-class').value;
            if (!PlanId) {
                toastr.info('Plan is required');
                return false;
            }

            const dataAttributes = ['PlanName', 'PlanPrice', 'PlanTime', 'PlanLiquor', 'PlanNomination','StrikePrice'].reduce((acc, attr) => {
                const element = activeElement.querySelector(`.${attr}-class`);
                if (element) {
                    const value = element.getAttribute('data-info');
                    acc[attr] = value;
                }
                return acc;
            }, {});
            //console.log('Data Attributes:', dataAttributes);
            const IsPopularPlan = activeElement.querySelector('.ispopularplan-class').value;
            DataStorageFunction(PlanId, ...Object.values(dataAttributes), IsPopularPlan);
            var clubDetail = @Html.Raw(Json.Encode(@ClubDetailModel));
            var encodedClubDetail = encodeURIComponent(JSON.stringify(clubDetail));
            const url = `@Url.Action("Host", "ReservationManagementV3")?ClubId=${'@Model.ClubDetailModel.ClubId'}&ClubDetailModel=${encodedClubDetail}`;
            window.location.href = url;
        }

        const DataStorageFunction = (PlanId, PlanName, PlanPrice, PlanTime, PlanLiquor, PlanNomination, StrikePrice, IsPopularPlan) => {
            const encryptedData = {
                ClubId: '@Model.ClubDetailModel.ClubId',
                PlanId: PlanId,
                PlanName: PlanName? EncryptParameter(PlanName) : '',
                PlanPrice: PlanPrice ? EncryptParameter(PlanPrice) : '',
                PlanTime: PlanTime? EncryptParameter(PlanTime) : '',
                PlanLiquor: PlanLiquor? EncryptParameter(PlanLiquor) : '',
                PlanNomination: PlanNomination? EncryptParameter(PlanNomination) : '',
                PlanNomination: PlanNomination? EncryptParameter(PlanNomination) : '',
                StrikePrice: StrikePrice ? EncryptParameter(StrikePrice) : '',
                SelectedHost: '@ViewBag.SelectedHost',
                VisitDate: '@ViewBag.VisitDate' ? EncryptParameter('@ViewBag.VisitDate') : '',
                VisitTime: '@ViewBag.VisitTime' ? EncryptParameter('@ViewBag.VisitTime') : '',
                NoOfPeople: '@ViewBag.NoOfPeople' ? EncryptParameter('@ViewBag.NoOfPeople'): '',
                SelectedHost: '@ViewBag.SelectedHost',
                IsPopularPlan: IsPopularPlan ? EncryptParameter(IsPopularPlan):''
            };

            Object.entries(encryptedData).forEach(([key, value]) => localStorage.setItem(key, value));
        };
    </script>
}