@model CRS.CUSTOMER.APPLICATION.Models.DashboardV2.PreferenceFilterModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var FilteredLocationId = (ViewBag.LocationId as string)?.Trim();
}
<style>
    .preferance > input[type="checkbox"] {
        display: none;
    }

    /* Style the labels to look like bordered options */
    label {
        display: inline-block;
        padding: 5px 10px;
        margin: 5px;
        border: 1px solid #d75a8b;
        border-radius: 5px;
        cursor: pointer;
    }

    /* Style the labels when they are selected */
    .preferance > input[type="checkbox"]:checked + label {
        background-color: #fff;
        border-color: #d75a8b;
        color: #d75a8b;
    }
</style>
<div class="relative">
    <!-- Nav bar -->
    <div class="flex items-center border-t-[2px] border-t-[#C8B477] sticky top-0 bg-white z-[10] relative px-4 py-[10px] h-[44px]">
        <div class="flex gap-2 items-center absolute top-[12px] left-4 text-sm" onclick="window.location.href='/LocationManagement/Index?LocationId=@FilteredLocationId'">
            <svg xmlns="http://www.w3.org/2000/svg"
                 width="22" height="23" viewBox="0 0 22 23" fill="none">
                <path d="M15.2352 3.24084C14.786 2.79167 14.0618 2.79167 13.6127 3.24084L5.99518 10.8583C5.63768 11.2158 5.63768 11.7933 5.99518 12.1508L13.6127 19.7683C14.0618 20.2175 14.786 20.2175 15.2352 19.7683C15.6843 19.3192 15.6843 18.595 15.2352 18.1458L8.59851 11.5L15.2443 4.85417C15.6843 4.41417 15.6843 3.68084 15.2352 3.24084Z"
                      fill="#BCB08A" />
            </svg> @CRS.CUSTOMER.APPLICATION.Resources.Resource.Back
        </div>
        <div class="text-center w-full font-[700] text-[#333] text-sm ">
            検索フィルター
        </div>
    </div>
    <!-- search bar -->
    <div class="py-[8px] px-4 border-b-[1px] border-[#EFEFEF] sticky top-[44px] z-10 bg-white">
        <div class=" border border-[#D6CEB4] flex rounded-[4px]">
            <span class="flex items-center ml-3 material-icons-outlined text-[#D6CEB4]">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <path d="M8.125 1.875C11.5698 1.875 14.375 4.68018 14.375 8.125C14.375 9.62158 13.8501 10.9937 12.9688 12.0703L17.9492 17.0508L17.0508 17.9492L12.0703 12.9688C10.9937 13.8501 9.62158 14.375 8.125 14.375C4.68018 14.375 1.875 11.5698 1.875 8.125C1.875 4.68018 4.68018 1.875 8.125 1.875ZM8.125 3.125C5.35645 3.125 3.125 5.35645 3.125 8.125C3.125 10.8936 5.35645 13.125 8.125 13.125C10.8936 13.125 13.125 10.8936 13.125 8.125C13.125 5.35645 10.8936 3.125 8.125 3.125Z"
                          fill="#BCB08A" />
                </svg>
            </span>
            <input style="border-radius: 4px; background: #FCFCFC; "
                   class="w-full ml-1 text-sm text-[#A09E91] border-none focus-visible:outline-0" title="Search"
                   type="text" placeholder="350店舗以上のホストクラブから探す" id="main-search-id" autocomplete="off" />
            <div class="group flex justify-end cursor-pointer p-3" title="Filter">
                <svg xmlns="http://www.w3.org/2000/svg" width="19" height="17" viewBox="0 0 19 17" fill="none">
                    <path d="M7.2418 2.1217C6.99882 1.21843 6.2109 0.554688 5.27835 0.554688C4.3458 0.554688 3.55792 1.21843 3.3149 2.1217H0.5V3.29696H3.3149C3.55788 4.20022 4.3458 4.86397 5.27835 4.86397C6.2109 4.86397 6.99878 4.20022 7.2418 3.29696H18.5V2.1217H7.2418ZM5.27835 3.68871C4.76674 3.68871 4.35052 3.24936 4.35052 2.70933C4.35052 2.1693 4.76674 1.72995 5.27835 1.72995C5.78996 1.72995 6.20619 2.1693 6.20619 2.70933C6.20619 3.24936 5.78996 3.68871 5.27835 3.68871Z"
                          fill="#BCB08A" />
                    <path d="M9.5 6.49609C8.56745 6.49609 7.77957 7.15984 7.53655 8.0631H0.5V9.23836H7.53655C7.77953 10.1416 8.56745 10.8054 9.5 10.8054C10.4325 10.8054 11.2204 10.1416 11.4634 9.23836H18.5V8.0631H11.4634C11.2204 7.15984 10.4325 6.49609 9.5 6.49609ZM9.5 9.63011C8.98839 9.63011 8.57216 9.19076 8.57216 8.65073C8.57216 8.1107 8.98839 7.67135 9.5 7.67135C10.0116 7.67135 10.4278 8.1107 10.4278 8.65073C10.4278 9.19076 10.0116 9.63011 9.5 9.63011Z"
                          fill="#BCB08A" />
                    <path d="M5.27835 12.4375C4.3458 12.4375 3.55792 13.1012 3.3149 14.0045H0.5V15.1798H3.3149C3.55788 16.083 4.3458 16.7468 5.27835 16.7468C6.2109 16.7468 6.99878 16.083 7.2418 15.1798H18.5V14.0045H7.2418C6.99878 13.1012 6.2109 12.4375 5.27835 12.4375ZM5.27835 15.5715C4.76674 15.5715 4.35052 15.1322 4.35052 14.5921C4.35052 14.0521 4.76674 13.6128 5.27835 13.6128C5.78996 13.6128 6.20619 14.0521 6.20619 14.5921C6.20619 15.1322 5.78996 15.5715 5.27835 15.5715Z"
                          fill="#BCB08A" />
                </svg>
            </div>
        </div>
    </div>
    <div>
        <div class="px-4 pt-1 text-[#0F0F0F] text-sm font-bold">
            検索対象を選ぶ
        </div>
        <div class="bg-[#fff]">
            <div class="mx-4 mt-[1px] bg-[#FFF] overflow-hidden overflow-x-auto no-scrollbar">
                <div class="flex gap-[24px] w-full " style="border-bottom: 4px solid #F4F4F4;">
                    <div class="flex tab-container-plane booking-tab bg-white gap-6 w-full text-sm no-scrollbar">
                        <button id="tab1Button" class="tab-button-plane w-max flex-none tab-link active">ホストクラブ</button>
                        <button id="tab2Button" class="tab-button-plane w-max flex-none tab-link pt-0 ">ホスト</button>
                        <button id="tab3Button" class="tab-button-plane w-max flex-none tab-link pt-0 ">新規店舗</button>
                        <button id="tab4Button"
                                class="tab-button-plane w-max flex-none tab-link pt-0">
                            現在地に近い店舗
                        </button>
                    </div>
                </div>
            </div>
            <div class="my-4">
                <div class="bg-white pb-4  px-[16px] ">
                    <div id="tab1" class="tab-content-plane">
                        <form action="/Search/ClubFilter" method="get" id="club-filter-form-id" hidden>
                            <input type="search" id="club-search" name="SearchFilter" hidden>
                            <input type="text" class="location-class" id="LocationId_1" name="LocationId" value="" hidden />
                            <input type="text" id="club-category-id" name="ClubCategory" value="" hidden />
                            <input type="text" id="price-id" name="Price" value="" hidden />
                            <input type="text" id="time-type-id" name="Shift" value="" hidden />
                            <input type="text" id="time-id" name="Time" value="" hidden />
                            <input type="text" id="clubavailability-id" name="ClubAvailability" value="" hidden />
                        </form>
                        <!--#region host-club.php-->
                        <div class="pb-12">
                            <div class="py-2">
                                <div class="text-sm text-[#333] font-bold mb-[13px]">
                                    エリアから探す
                                </div>
                                <div class="flex flex-col mt-[8px] gap-[13px]">
                                    @foreach (var item in Model.LocationModel)
                                    {
                                        var Label = item.StaticLabel.Split('/');
                                        var activeClass = (!string.IsNullOrEmpty(FilteredLocationId) && item.StaticValue.Trim() == FilteredLocationId) ? "active" : string.Empty;
                                        <div class="select-location-store select-loaction-host text-[#333] text-sm @activeClass" id="club-location-id">
                                            <div class="square">
                                            </div>
                                            <div class="flex gap-1">
                                                <div class="locationValue font-bold" data-info="@item.StaticValue" data-info-2="@Label[0]">
                                                    @Label[0]/
                                                </div> <span>@Label[1]</span>

                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <!-- 店舗カテゴリーから探す -->
                            <div class="flex flex-col gap-[13px] mt-2">
                                <div class="">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        店舗カテゴリーから探す
                                    </div>
                                    <form class="search-field-selection">
                                        <div class="flex flex-col w-full ">
                                            <div class="flex flex-row flex-wrap  gap-[24px]">
                                                @foreach (var item in Model.ClubCategoryModel)
                                                {
                                                    <div class="preferance">
                                                        <input type="checkbox" id="ClubCategoryModel_@item.StaticValue" name="search-by-store-category" value="@item.StaticValue" class="club-category-class">
                                                        <label for="ClubCategoryModel_@item.StaticValue" class="w-[88px]">@item.StaticLabel</label>
                                                    </div>
                                                }

                                            </div>

                                        </div>
                                    </form>
                                </div>
                                <div class="">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        料金
                                    </div>
                                    <form class="search-field-selection ">
                                        <div class="flex flex-col   w-full ">
                                            <div class="flex flex-row flex-wrap  gap-[24px]">
                                                @foreach (var item in Model.PlanPriceModel)
                                                {
                                                    <div class="preferance">
                                                        <input type="checkbox" id="PlanPriceModel_@item.StaticValue" class="plan-price-class hidden" name="search-by-plan" value="@item.StaticValue">
                                                        <label for="PlanPriceModel_@item.StaticValue" class="w-[88px]">@item.StaticLabel</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="border-y-[1px] border-[#EFEFEF] py-[10px]">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        営業時間から探す
                                    </div>
                                    <div class="flex flex-row mt-[8px] gap-6 mb-4">
                                        <div class="search-by-business-hours search-by-business-hours-select text-[#333] text-sm">
                                            <div class="">
                                                <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                                     viewBox="0 0 13 13" fill="none">
                                                    <circle cx="6.5" cy="6.5" r="5" stroke="#666666" stroke-opacity="0.4" stroke-width="2" />
                                                </svg>
                                                <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                                     viewBox="0 0 13 13" fill="none">
                                                    <circle cx="6.5" cy="6.5" r="5" stroke="#D75A8B" stroke-width="2" />
                                                    <circle cx="6.4987" cy="6.4987" r="2.66667" fill="#D75A8B" />
                                                </svg>
                                            </div>
                                            <div class="searchbybusinesshoursValue text-sm text-[#333]" data-info="@ApplicationUtilities.EncryptParameter("1").ToString()">昼</div>
                                        </div>
                                        <div class="search-by-business-hours search-by-business-hours-select text-[#333] text-sm ">
                                            <div class="">
                                                <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                                     viewBox="0 0 13 13" fill="none">
                                                    <circle cx="6.5" cy="6.5" r="5" stroke="#666666" stroke-opacity="0.4" stroke-width="2" />
                                                </svg>
                                                <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                                     viewBox="0 0 13 13" fill="none">
                                                    <circle cx="6.5" cy="6.5" r="5" stroke="#D75A8B" stroke-width="2" />
                                                    <circle cx="6.4987" cy="6.4987" r="2.66667" fill="#D75A8B" />
                                                </svg>
                                            </div>
                                            <div class="searchbybusinesshoursValue text-sm text-[#333]" data-info="@ApplicationUtilities.EncryptParameter("2").ToString()">夜</div>
                                        </div>
                                        <div class="search-by-business-hours search-by-business-hours-select text-[#333] text-sm contains-time-class">
                                            <div class="">
                                                <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                                     viewBox="0 0 13 13" fill="none">
                                                    <circle cx="6.5" cy="6.5" r="5" stroke="#666666" stroke-opacity="0.4" stroke-width="2" />
                                                </svg>
                                                <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="13" height="13"
                                                     viewBox="0 0 13 13" fill="none">
                                                    <circle cx="6.5" cy="6.5" r="5" stroke="#D75A8B" stroke-width="2" />
                                                    <circle cx="6.4987" cy="6.4987" r="2.66667" fill="#D75A8B" />
                                                </svg>
                                            </div>
                                            <div class="searchbybusinesshoursValue text-sm text-[#333]" data-info="@ApplicationUtilities.EncryptParameter("3").ToString()">時間を指定する</div>
                                        </div>

                                    </div>
                                    <!--#region time-index.php-->
                                    <div class="relative" id="time-div-id" style="display:none;">
                                        <div class=" showTimeList h-[32px] w-[72px] px-3 py-1 bg-[#F6F6F6] rounded-[4px] text-[#666] text-xs flex justify-between items-center">
                                            <div id="selected-time-id">
                                                01:00
                                            </div>
                                            <div>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="8" height="5" viewBox="0 0 8 5" fill="none">
                                                    <path d="M4 5L0.535898 0.5L7.4641 0.5L4 5Z" fill="#666666" />
                                                </svg>
                                            </div>
                                        </div>
                                        <div id="timeListContainer" class=" timeListContainer rounded-[4px] bg-[#F6F6F6] w-[72px]" style="display: none;">
                                            @for (int i = 0; i <= 23; i++)
                                            {
                                                <div class="timeList  h-[32px]  px-3 py-1 text-[#666] text-xs flex justify-between items-center">
                                                    @{
                                                        var timeValue = i.ToString("00") + ":00";
                                                        <div class="timeValue" data-info="@ApplicationUtilities.EncryptParameter(timeValue).ToString()">
                                                            @timeValue
                                                        </div>
                                                    }
                                                    <div class="activeTime">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12" fill="none">
                                                            <path d="M8.94643 3L4.88393 7.31494L3.05357 5.37077L2.25 6.22238L4.48214 8.59236L4.88393 9L5.28571 8.59236L9.75 3.8524L8.94643 3Z"
                                                                  fill="#666666" />
                                                        </svg>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <!--#endregion time-index.php-->
                                </div>
                                <div>
                                    <div class="flex flex-col mt-[8px] gap-6 mb-4">
                                        <div class="multi-select text-[#333] text-sm">
                                            <div class="multi-select-value text-sm text-[#333]" data-value="@ApplicationUtilities.EncryptParameter("0").ToString()">今すぐ行けるお店</div>
                                            <div class="">
                                                <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                                     viewBox="0 0 25 24" fill="none">
                                                    <circle opacity="0.4" cx="12.5" cy="12" r="7" stroke="#666666" stroke-opacity="0.4"
                                                            stroke-width="4" />
                                                </svg>
                                                <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                                     viewBox="0 0 25 24" fill="none">
                                                    <circle cx="12.5" cy="12" r="7.5" stroke="#D75A8B" stroke-width="3" />
                                                    <circle cx="12.5" cy="12" r="4" fill="#D75A8B" />
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    @foreach (var item in Model.ClubAvailabilityModel)
                                    {
                                        <div class="flex flex-col mt-[8px] gap-6 mb-4">
                                            <div class="multi-select text-[#333] text-sm ">
                                                <div class="multi-select-value text-sm text-[#333]" data-value="@item.StaticValue">@item.StaticLabel</div>
                                                <div class="">
                                                    <svg class="inactive-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                                         viewBox="0 0 25 24" fill="none">
                                                        <circle opacity="0.4" cx="12.5" cy="12" r="7" stroke="#666666" stroke-opacity="0.4"
                                                                stroke-width="4" />
                                                    </svg>
                                                    <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="25" height="24"
                                                         viewBox="0 0 25 24" fill="none">
                                                        <circle cx="12.5" cy="12" r="7.5" stroke="#D75A8B" stroke-width="3" />
                                                        <circle cx="12.5" cy="12" r="4" fill="#D75A8B" />
                                                    </svg>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="flex gap-4 py-4 items-center fixed bottom-0 left-0 w-full px-4 bg-white ">
                            <button class="btn bg-[#E4E4E4] " onclick="ClearFunction();">
                                条件をクリア
                            </button>
                            <button class="btn btn-primary" onclick="ClubFilterSubmitButton();">
                                <a class="h-full w-full">
                                    検索する
                                </a>
                            </button>
                        </div>
                        <!--#endregion host-club.php-->
                    </div>
                    <div id="tab2" class="tab-content-plane hidden">
                        <form action="/Search/HostFilter" method="get" id="host-filter-form-id" hidden>
                            <input type="search" id="host-search" name="SearchFilter" hidden>
                            <input type="text" class="location-class" id="LocationId_2" name="LocationId" value="" hidden />
                            <input type="text" id="host-height-id" name="Height" value="" hidden />
                            <input type="text" id="host-age-id" name="Age" value="" hidden />
                            <input type="text" id="host-bloodtype-id" name="BloodType" value="" hidden />
                            <input type="text" id="host-constellationgroup-id" name="ConstellationGroup" value="" hidden />
                            <input type="text" id="host-occupation-id" name="Occupation" value="" hidden />
                        </form>
                        <!--#region host.php-->
                        <div class="pb-12">
                            <div class="text-xs text-[#333]">
                                こだわりから探す
                            </div>
                            <div class="flex flex-col gap-[13px]">
                                <div class="py-2">
                                    <div class="text-sm text-[#333] font-bold mb-[13px]">
                                        エリアから探す
                                    </div>
                                    <div class="flex flex-col mt-[8px] gap-[13px]">
                                        @foreach (var item in Model.LocationModel)
                                        {
                                            var Label = item.StaticLabel.Split('/');
                                            var activeClass = (!string.IsNullOrEmpty(FilteredLocationId) && item.StaticValue.Trim() == FilteredLocationId) ? "active" : string.Empty;
                                            <div class="select-location-store-host-section select-loaction-host text-[#333] text-sm @activeClass" id="host-location-id">
                                                <div class="square">
                                                </div>
                                                <div class="flex gap-1">
                                                    <div class="locationValue font-bold" data-info="@item.StaticValue" data-info-2="@Label[0]">@Label[0]/</div>
                                                    <span>@Label[1]</span>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <!-- 身長を選ぶ -->
                                <div class="">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        身長を選ぶ
                                    </div>
                                    <form class="search-field-selection">
                                        <div class="flex flex-col   w-full ">
                                            <div class="flex flex-row flex-wrap  gap-[16px]">
                                                @foreach (var item in Model.HeightModel)
                                                {
                                                    <div class="preferance">
                                                        <input type="checkbox" id="HeightModel_@item.StaticValue" name="choose-your-height" class="host-height" value="@item.StaticValue">
                                                        <label for="HeightModel_@item.StaticValue">@item.StaticLabel</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        年齢を選ぶ
                                    </div>
                                    <form class="search-field-selection">
                                        <div class="flex flex-col   w-full ">
                                            <div class="flex flex-row flex-wrap gap-[16px]">
                                                @foreach (var item in Model.AgeModel)
                                                {
                                                    <div class="preferance">
                                                        <input type="checkbox" id="AgeModel_@item.StaticValue" name="select-age" class="host-age" value="@item.StaticValue">
                                                        <label class="w-[64px]" for="AgeModel_@item.StaticValue">@item.StaticLabel</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        血液型を選ぶ
                                    </div>
                                    <form class="search-field-selection">
                                        <div class="flex flex-col   w-full ">
                                            <div class="flex flex-row flex-wrap gap-[16px]">
                                                @foreach (var item in Model.BloodTypeModel)
                                                {
                                                    <div class="preferance">
                                                        <input type="checkbox" id="BloodTypeModel_@item.StaticValue" name="choose-blood-type" class="host-blood-type" value="@item.StaticValue">
                                                        <label class="w-[64px]" for="BloodTypeModel_@item.StaticValue">@item.StaticLabel</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        星座を選ぶ
                                    </div>
                                    <form class="search-field-selection">
                                        <div class="flex flex-col   w-full ">
                                            <div class="flex flex-row flex-wrap gap-[24px]">
                                                @{
                                                    var ConstellationImage = "/Content/assets/images/customer/Constellation/";
                                                    foreach (var item in ViewBag.HostConstellationGroup as List<CRS.CUSTOMER.SHARED.StaticDataCommon>)
                                                    {
                                                        ConstellationImage = "/Content/assets/images/customer/Constellation/" + item.ExtraData1.ToString().ToLower() + ".svg";
                                                        <div class="preferance">
                                                            <input type="checkbox" id="zodiac_@item.Value" name="hostConstellationGroup" class="host-constellation-group-class" value="@item.Value">
                                                            <label class="w-[92px] gap-[6px]" for="zodiac_@item.Value">
                                                                @item.Text
                                                                <img class="h-[3px] w-[3px] object-fill  rounded-full "
                                                                     src="@ConstellationImage" alt="img">
                                                            </label>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="">
                                    <div class="text-sm text-[#333] font-bold mb-2">
                                        前職を選ぶ
                                    </div>
                                    <div class="input-field-common">
                                        <select id="host-occupation-ddl-id" style="width: 100%;" class="text-[#B7B7B7] h-[44px]">
                                            @foreach (var item in Model.OccupationModel)
                                            {
                                                if (!string.IsNullOrEmpty(item.StaticValue) && item.StaticValue.Trim() == "0")
                                                {
                                                    <option value="@item.StaticValue" selected>
                                                        @item.StaticLabel
                                                    </option>
                                                }
                                                else
                                                {
                                                    <option value="@item.StaticValue">
                                                        @item.StaticLabel
                                                    </option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>

                            </div>


                        </div>
                        <div class="flex gap-4 py-4 items-center fixed bottom-0 left-0 w-full px-4 bg-white ">
                            <button class="btn bg-[#E4E4E4] " onclick="ClearFunction();">
                                条件をクリア
                            </button>
                            <button class="btn btn-primary" onclick="HostFilterSubmitButton();">

                                <a class="h-full w-full">
                                    検索する
                                </a>
                            </button>
                        </div>
                        <!--#endregion host.php-->
                    </div>
                    <div id="tab3" class="tab-content-plane hidden ">
                        <!--#region new-store.php-->
                        <div class="pb-12" style="padding-bottom:60px">
                            <div>
                                <div class="text-sm text-[#333] font-bold mb-2">
                                    新規店舗
                                </div>
                                @if (Model.ClubModel != null && Model.ClubModel.Count > 0)
                                {
                                    <div class="grid grid-cols-3 gap-2">
                                        @foreach (var item in Model.ClubModel)
                                        {<a onclick="ClubDetailActionFunction('@item.ClubLocationId', '@item.ClubId')">
                                                <div class="new-host-card">
                                                    <div class="image">
                                                        <img src="@item.ClubLogo" alt="club-logo" />
                                                    </div>
                                                    <div>
                                                        <div class="title">
                                                            @item.ClubName
                                                        </div>
                                                        <div class="description">
                                                            @item.ClubNameJapanese
                                                        </div>
                                                    </div>
                                                </div>
                                            </a>
                                        }
                                    </div>
                                    <div class="flex items-center gap-1 justify-center w-full text-[#D75A8B] text-xs mt-1 ">
                                        <div class="border-b-[1px] border-[#D75A8B] pb-[1px] " onclick="NewClubRenderFunction()">
                                            続きを見る
                                        </div>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="13" height="12" viewBox="0 0 13 12" fill="none">
                                            <path d="M5 9L8 6L5 3" stroke="#D75A8B" stroke-linecap="round" stroke-linejoin="round" />
                                        </svg>
                                    </div>
                                }
                                else
                                {
                                    <div class="flex flex-col gap-4 p-4  border-t border-t-[#E0E0E0] flex justify-center items-center">
                                        <div class="text-[#18181B] font-semibold mt-12 text-center">
                                            @CRS.CUSTOMER.APPLICATION.Resources.Resource.NoSearchRecordFound
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="pt-[13px]">
                                <div class="text-sm text-[#333] font-bold mb-2">
                                    あなたにマッチするホスト
                                </div>
                                @if (Model.HostModel != null && Model.HostModel.Count > 0)
                                {
                                    <div class="grid grid-cols-3 gap-[2px]">
                                        @{
                                            foreach (var item in Model.HostModel)
                                            {
                                                var activeClass = !string.IsNullOrEmpty(item.IsBookmarked) && item.IsBookmarked.Trim().Equals("Y", StringComparison.OrdinalIgnoreCase) ? "active" : string.Empty;
                                                <div class="hosts-that-match-you @activeClass" onclick="window.location.href='/LocationManagement/ViewHostDetail?HostId=@item.HostId'">
                                                    <img src="@item.HostLogo" alt="host-logo" />
                                                    @if (item.IsBookmarked.ToUpper() == "Y")
                                                    {
                                                        <div class="like-host" onclick="RemoveBookmark('@item.ClubId','@item.HostId','host')">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="34" height="34" viewBox="0 0 34 34" fill="none">
                                                                <g filter="url(#filter0_d_4820_24085)">
                                                                    <circle cx="17" cy="17" r="10" fill="#D75A8B" />
                                                                </g>
                                                                <path d="M14.5018 13.1543C12.9108 13.1543 11.6172 14.4578 11.6172 16.0277C11.6172 16.5754 11.8666 17.0498 12.098 17.3925C12.3293 17.7353 12.5667 17.9553 12.5667 17.9553L16.7254 22.1097L17.0018 22.3851L17.2782 22.1097L21.4369 17.9553C21.4369 17.9553 22.3864 17.1217 22.3864 16.0277C22.3864 14.4578 21.0928 13.1543 19.5018 13.1543C18.1812 13.1543 17.3308 13.946 17.0018 14.2797C16.6728 13.946 15.8224 13.1543 14.5018 13.1543Z" fill="white" />
                                                                <defs>
                                                                    <filter id="filter0_d_4820_24085" x="0" y="0" width="34" height="34" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                                                                        <feFlood flood-opacity="0" result="BackgroundImageFix" />
                                                                        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                                                                        <feOffset />
                                                                        <feGaussianBlur stdDeviation="3.5" />
                                                                        <feComposite in2="hardAlpha" operator="out" />
                                                                        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                                                                        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_4820_24085" />
                                                                        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_4820_24085" result="shape" />
                                                                    </filter>
                                                                </defs>
                                                            </svg>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="like-host" onclick="AddBookmark('@item.ClubId','@item.HostId','host')">
                                                            <svg class="inActive-svg" xmlns="http://www.w3.org/2000/svg" width="31" height="34"
                                                                 viewBox="0 0 31 34" fill="none">
                                                                <g filter="url(#filter0_d_3058_46008)">
                                                                    <circle cx="17" cy="17" r="10" fill="white" />
                                                                </g>
                                                                <path d="M13.0968 17.4266L13.0868 17.4167L13.0784 17.4089L13.0783 17.4088L13.0763 17.4068C13.0729 17.4036 13.0665 17.3974 13.0575 17.3883C13.0393 17.3701 13.011 17.3408 12.976 17.302C12.9051 17.2235 12.8112 17.1105 12.7196 16.9748C12.5183 16.6767 12.3672 16.3544 12.3672 16.0296C12.3672 14.8742 13.3248 13.9062 14.5018 13.9062C15.5079 13.9062 16.1721 14.5083 16.4677 14.8082L17.0018 15.3499L17.5359 14.8082C17.8316 14.5083 18.4957 13.9062 19.5018 13.9062C20.6789 13.9062 21.6364 14.8742 21.6364 16.0296C21.6364 16.3638 21.4878 16.6965 21.2937 16.9787C21.2005 17.1141 21.1068 17.2235 21.0373 17.2977C21.0029 17.3345 20.9754 17.3617 20.9582 17.3783C20.9497 17.3865 20.9437 17.392 20.9409 17.3946C20.9404 17.3951 20.94 17.3954 20.9397 17.3957C20.9395 17.3959 20.9393 17.396 20.9392 17.3961L20.9239 17.4095L20.9068 17.4266L17.0018 21.3277L13.0968 17.4266Z"
                                                                      stroke="#E3A1A1" stroke-width="1.5" />
                                                                <defs>
                                                                    <filter id="filter0_d_3058_46008" x="0" y="0" width="34" height="34"
                                                                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                                                                        <feFlood flood-opacity="0" result="BackgroundImageFix" />
                                                                        <feColorMatrix in="SourceAlpha" type="matrix"
                                                                                       values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                                                                        <feOffset />
                                                                        <feGaussianBlur stdDeviation="3.5" />
                                                                        <feComposite in2="hardAlpha" operator="out" />
                                                                        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                                                                        <feBlend mode="normal" in2="BackgroundImageFix"
                                                                                 result="effect1_dropShadow_3058_46008" />
                                                                        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_3058_46008"
                                                                                 result="shape" />
                                                                    </filter>
                                                                </defs>
                                                            </svg>
                                                            <svg class="active-svg" xmlns="http://www.w3.org/2000/svg" width="31" height="34"
                                                                 viewBox="0 0 31 34" fill="none">
                                                                <g filter="url(#filter0_d_3058_39409)">
                                                                    <circle cx="17" cy="17" r="10" fill="#D75A8B" />
                                                                </g>
                                                                <path d="M14.5018 13.1562C12.9108 13.1562 11.6172 14.4598 11.6172 16.0296C11.6172 16.5774 11.8666 17.0518 12.098 17.3945C12.3293 17.7372 12.5667 17.9572 12.5667 17.9572L16.7254 22.1117L17.0018 22.387L17.2782 22.1117L21.4369 17.9572C21.4369 17.9572 22.3864 17.1236 22.3864 16.0296C22.3864 14.4598 21.0928 13.1562 19.5018 13.1562C18.1812 13.1562 17.3308 13.9479 17.0018 14.2817C16.6728 13.9479 15.8224 13.1562 14.5018 13.1562Z"
                                                                      fill="white" />
                                                                <defs>
                                                                    <filter id="filter0_d_3058_39409" x="0" y="0" width="34" height="34"
                                                                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                                                                        <feFlood flood-opacity="0" result="BackgroundImageFix" />
                                                                        <feColorMatrix in="SourceAlpha" type="matrix"
                                                                                       values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                                                                        <feOffset />
                                                                        <feGaussianBlur stdDeviation="3.5" />
                                                                        <feComposite in2="hardAlpha" operator="out" />
                                                                        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                                                                        <feBlend mode="normal" in2="BackgroundImageFix"
                                                                                 result="effect1_dropShadow_3058_39409" />
                                                                        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_3058_39409"
                                                                                 result="shape" />
                                                                    </filter>
                                                                </defs>
                                                            </svg>
                                                        </div>
                                                    }
                                                    <div class="description">
                                                        <div class="title">@item.HostNameEnglish</div>
                                                        <div class="club-name"><img src="@item.ClubLogo" alt="club-logo" />@item.ClubNameEnglish</div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <div class="flex items-center gap-1 justify-center w-full text-[#D75A8B] text-xs mt-1 ">
                                        <div class="border-b-[1px] border-[#D75A8B] pb-[1px] " onclick="NewHostRenderFunction()">
                                            続きを見る
                                        </div>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="13" height="12" viewBox="0 0 13 12" fill="none">
                                            <path d="M5 9L8 6L5 3" stroke="#D75A8B" stroke-linecap="round" stroke-linejoin="round" />
                                        </svg>
                                    </div>
                                }
                                else
                                {
                                    <div class="flex flex-col gap-4 p-4  border-t border-t-[#E0E0E0] flex justify-center items-center">
                                        <div class="text-[#18181B] font-semibold mt-12 text-center">
                                            @CRS.CUSTOMER.APPLICATION.Resources.Resource.NoSearchRecordFound
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>
                        <div class="flex gap-4 py-4 items-center fixed bottom-0 left-0 w-full px-4 bg-white z-10 ">
                            <button class="btn bg-[#E4E4E4] " onclick="ClearFunction();">
                                条件をクリア
                            </button>
                            <button class="btn btn-primary" onclick="Tab3SubmitFunction()">
                                <a class="h-full w-full">
                                    検索する
                                </a>
                            </button>
                        </div>
                        <!--#endregion new-store.php-->
                    </div>
                    <div id="tab4" class="tab-content-plane hidden">
                        <!--#region near-location.php-->
                        <div class="pb-12">
                            <div class="bg-white ">
                                <div class="flex tab-container map-tab-container">
                                    <button id="tab1Button" class="tab-button tab-link map-tab ">こだわりから探す</button>
                                    <button id="tab2Button" class="tab-button tab-link  map-tab active">マップから探す</button>
                                </div>
                            </div>
                            <div class="bg-white ">
                                <div id="tab1" class="tab-content hidden">
                                    <div class="flex items-center gap-1 text-[#d75a8b] text-[10px] px-[2px] py-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                                            <path d="M8.00156 1C5.29256 1 3.10156 3.191 3.10156 5.9C3.10156 9.575 8.00156 15 8.00156 15C8.00156 15 12.9016 9.575 12.9016 5.9C12.9016 3.191 10.7106 1 8.00156 1ZM4.50156 5.9C4.50156 3.968 6.06956 2.4 8.00156 2.4C9.93356 2.4 11.5016 3.968 11.5016 5.9C11.5016 7.916 9.48556 10.933 8.00156 12.816C6.54556 10.947 4.50156 7.895 4.50156 5.9Z"
                                                  fill="#D75A8B" />
                                            <path d="M8 7.64844C8.9665 7.64844 9.75 6.86494 9.75 5.89844C9.75 4.93194 8.9665 4.14844 8 4.14844C7.0335 4.14844 6.25 4.93194 6.25 5.89844C6.25 6.86494 7.0335 7.64844 8 7.64844Z"
                                                  fill="#D75A8B" />
                                        </svg>
                                        現在地
                                    </div>
                                    <div class="py-2">
                                        <div class="text-sm text-[#333] font-bold mb-[13px]">
                                            エリアから探す
                                        </div>
                                        <div class="flex flex-col mt-[8px] gap-[13px]">
                                            @foreach (var item in Model.LocationModel)
                                            {
                                                var Label = item.StaticLabel.Split('/');
                                                var activeClass = (!string.IsNullOrEmpty(FilteredLocationId) && item.StaticValue.Trim() == FilteredLocationId) ? "active" : string.Empty;
                                                <div class="select-near-location select-loaction-host text-[#333] text-sm @activeClass" id="tab4-loaction-id">
                                                    <div class="square">
                                                    </div>
                                                    <div class="flex gap-1">
                                                        <div class="locationValue font-bold" data-info="@item.StaticValue" data-info-2="@Label[0]">
                                                            @Label[0]/
                                                        </div>
                                                        <span>@Label[1]</span>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>

                                    <div class="flex gap-4 py-4 items-center fixed bottom-0 left-0 w-full px-4 bg-white ">
                                        <button class="btn bg-[#E4E4E4] " onclick="ClearFunction();">
                                            条件をクリア
                                        </button>
                                        <button class="btn btn-primary" onclick="Tab4SubmitFunction();">
                                            <a class="h-full w-full">
                                                検索する
                                            </a>
                                        </button>
                                    </div>
                                </div>
                                <div id="tab2" class="tab-content ">
                                    <!--#region map.php-->
                                    <style>
                                        .map-container #map {
                                            height: 365px;
                                        }

                                        .gm-style div[aria-label="Google Map"] > div:last-child {
                                            display: none;
                                        }
                                    </style>
                                    <div class="flex items-center gap-1 text-[#d75a8b] text-[10px] px-[2px] py-3  w-max" onclick="setUserLocation()">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                                            <path d="M8.00156 1C5.29256 1 3.10156 3.191 3.10156 5.9C3.10156 9.575 8.00156 15 8.00156 15C8.00156 15 12.9016 9.575 12.9016 5.9C12.9016 3.191 10.7106 1 8.00156 1ZM4.50156 5.9C4.50156 3.968 6.06956 2.4 8.00156 2.4C9.93356 2.4 11.5016 3.968 11.5016 5.9C11.5016 7.916 9.48556 10.933 8.00156 12.816C6.54556 10.947 4.50156 7.895 4.50156 5.9Z"
                                                  fill="#D75A8B" />
                                            <path d="M8 7.64844C8.9665 7.64844 9.75 6.86494 9.75 5.89844C9.75 4.93194 8.9665 4.14844 8 4.14844C7.0335 4.14844 6.25 4.93194 6.25 5.89844C6.25 6.86494 7.0335 7.64844 8 7.64844Z"
                                                  fill="#D75A8B" />
                                        </svg>
                                        現在地
                                    </div>
                                    <div class="map-container">
                                        <div id="map"></div>
                                    </div>

                                    <div class="map-card mt-2 mx-4" id="map-card" style="display: none;border-radius: 10px;">
                                        <div class="flex gap-1">
                                            <img src="" id="clubImage" class="h-6 w-6 rounded-full border border-[#F1EEEE]" alt="">
                                            <div class="text-[#333]">
                                                <div class="text-[10px] text-ellipsis-customer h-[15px] " id="clubNameEng">
                                                </div>
                                                <div class="text-[8px]" id="clubNamejpn"></div>
                                                <div class="flex gap-1 items-center">
                                                    <span class="review-start text-[#F0D830] text-xs" id="rating-label-id">
                                                        @*<i class="las la-star"></i> <i class="las la-star"></i>
                                                            <i class="las la-star"></i>
                                                            <i class="las la-star"></i>
                                                            <i class="las la-star-half-alt"></i>*@
                                                    </span>
                                                    <div class="text-[8px]" id="rating"></div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="flex flex-col justify-between">
                                            @*<div class="text-[10px]"></div>*@
                                            <a href="#" id="clubUrl">
                                                <div class="text-[8px] border-b-[1px] border-[#D75A8B] text-[#D75A8B] w-max">詳細を見る</div>

                                            </a>

                                        </div>
                                    </div>

                                    <div class="flex gap-4 py-4 items-center fixed bottom-0 left-0 w-full px-4 bg-white ">
                                        <button class="btn bg-[#E4E4E4] " onclick="ClearFunction();">
                                            条件をクリア
                                        </button>
                                        <button class="btn btn-primary" onclick="Tab4SubmitFunction();">
                                            <a class="h-full w-full">
                                                検索する
                                            </a>
                                        </button>
                                    </div>
                                    <!--#endregion map.php-->
                                </div>
                            </div>
                        </div>
                        <!--#endregion near-location.php-->
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts
{
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCVqzKbK_YObo2ivCYETgRkFCdjCFs2aQA&callback=initMap"></script>
    <script>// Get all the div elements

        var divs = document.querySelectorAll('.select-location-store');
        var seleclLocationCLub = document.querySelectorAll('.select-location-club');

        // Add click event listeners to each div
        divs.forEach(function (div) {
            div.addEventListener('click', function () {
                // Remove the 'bg-red' class from all divs
                divs.forEach(function (d) {
                    d.classList.remove('active');

                });
                // Add the 'bg-red' class to the clicked div
                this.classList.add('active');
            });
        });

        seleclLocationCLub.forEach(function (div) {
            div.addEventListener('click', function () {
                // Remove the 'bg-red' class from all divs
                seleclLocationCLub.forEach(function (d) {
                    d.classList.remove('active');

                });
                // Add the 'bg-red' class to the clicked div
                this.classList.add('active');

            });
        });</script>

    <script type="text/javascript">// see more
        function seemore() {
            var x = document.getElementById("seemore");

            if (x.style.display === "none") {
                x.style.display = "grid";
            } else {
                x.style.display = "none";
            }
        }

        const tabs = document.querySelector(".wrapper");
        const tabButton = document.querySelectorAll(".tab-button");
        const contents = document.querySelectorAll(".content");

        tabs.onclick = (e) => {
            const id = e.target.dataset.id;
            if (id) {
                tabButton.forEach((btn) => {
                    btn.classList.remove("active");
                });
                e.target.classList.add("active");

                contents.forEach((content) => {
                    content.classList.remove("active");
                });
                const element = document.getElementById(id);
                element.classList.add("active");
            }
        };



        const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

        checkboxes.forEach((checkbox) => {
            checkbox.addEventListener('change', function () {
                if (this.checked) {
                    checkboxes.forEach((otherCheckbox) => {
                        if (otherCheckbox !== this) {
                            otherCheckbox.checked = false;
                        }
                    });
                }
            });
        });</script>
    <!--#region host-club.php js-->
    <script>// Get all the div elements

        var divs = document.querySelectorAll('.select-location-store');
        var inputField = document.querySelector('input[name="selectLocationStore"]'); // Select by name attribute
        var inputFieldsClub = document.querySelector('input[name="selectLocationClub"]'); // Select by name attribute
        // Add click event listeners to each div
        divs.forEach(function (div) {
            div.addEventListener('click', function () {
                // Remove the 'bg-red' class from all divs
                divs.forEach(function (d) {
                    d.classList.remove('active');

                });
                // Add the 'bg-red' class to the clicked div
                this.classList.add('active');
            });
        });</script>

    <script>// Define searchbybusinesshours
        var multiSelectValues = [];

        var multiSelect = document.querySelectorAll('.multi-select ');
        multiSelect.forEach(function (div) {
            // Get the value of the multi-select option
            var value = div.querySelector('.multi-select-value').innerText;

            // Check if the option has the 'active' class
            if (div.classList.contains('active')) {
                // If it's active, add its value to the array
                multiSelectValues.push(value);
            }
        });
        //console.log(multiSelectValues);

        // Add event listener to each multiSelect div
        multiSelect.forEach(function (div) {
            div.addEventListener('click', function () {
                // Toggle 'active' class for the clicked div
                this.classList.toggle('active');

                // Get the value of the clicked option
                var value = this.querySelector('.multi-select-value').getAttribute('data-value');

                // Check if the option is selected or deselected
                if (this.classList.contains('active')) {
                    // If selected, add the value to the array
                    multiSelectValues.push(value);
                } else {
                    // If deselected, remove the value from the array
                    var index = multiSelectValues.indexOf(value);
                    if (index !== -1) {
                        multiSelectValues.splice(index, 1);
                    }
                }
                $('#clubavailability-id').val(multiSelectValues);
            });
        });</script>
    <script>// Define searchbybusinesshours
        var searchbybusinesshours = document.querySelectorAll('.search-by-business-hours');

        // Add event listener to each searchbybusinesshours div
        /*   searchbybusinesshours.forEach(function (div) {
               div.addEventListener('click', function () {
                   // Remove the 'active' class from all divs
                   searchbybusinesshours.forEach(function (d) {
                       d.classList.remove('active');
                   });
                   // Add the 'active' class to the clicked div
                   this.classList.add('active');
                   if (this.classList.contains('contains-time-class')) {
                       var div = document.getElementById('time-div-id');
                       div.style.display = 'block';
                   } else {
                       var div = document.getElementById('time-div-id');
                       div.style.display = 'none';
                   }
                   // Get the text content of the specific element within the clicked div
                   var searchbybusinesshoursSelectValue = this.querySelector('.searchbybusinesshoursValue');
                   $('#time-type-id').val(searchbybusinesshoursSelectValue.getAttribute('data-info'));
               });
           });*/
        searchbybusinesshours.forEach(function (div) {
            div.addEventListener('click', function () {
                // Check if the clicked div already has the 'active' class
                const isActive = this.classList.contains('active');

                // Remove the 'active' class from all divs
                searchbybusinesshours.forEach(function (d) {
                    d.classList.remove('active');
                });

                // Toggle the 'active' class based on its previous state
                if (!isActive) {
                    this.classList.add('active');
                }

                // Conditionally display the 'time-div-id' based on the presence of 'active' and 'contains-time-class'
                var div = document.getElementById('time-div-id');
                if (this.classList.contains('active') && this.classList.contains('contains-time-class')) {
                    div.style.display = 'block';
                } else {
                    div.style.display = 'none';
                }

                // Reset the value of '#time-type-id' if no div has 'active' class
                var activeDivExists = Array.from(searchbybusinesshours).some(d => d.classList.contains('active'));
                if (activeDivExists) {
                    // Get the text content of the specific element within the active div
                    var searchbybusinesshoursSelectValue = this.querySelector('.searchbybusinesshoursValue');
                    $('#time-type-id').val(searchbybusinesshoursSelectValue.getAttribute('data-info'));
                } else {
                    $('#time-type-id').val(''); // Reset or set to a default value
                }
            });
        });</script>
    <script type="text/javascript">// see more
        function seemore() {
            var x = document.getElementById("seemore");

            if (x.style.display === "none") {
                x.style.display = "grid";
            } else {
                x.style.display = "none";
            }
        }

        const tabs = document.querySelector(".wrapper");
        const tabButton = document.querySelectorAll(".tab-button");
        const contents = document.querySelectorAll(".content");

        tabs.onclick = (e) => {
            const id = e.target.dataset.id;
            if (id) {
                tabButton.forEach((btn) => {
                    btn.classList.remove("active");
                });
                e.target.classList.add("active");

                contents.forEach((content) => {
                    content.classList.remove("active");
                });
                const element = document.getElementById(id);
                element.classList.add("active");
            }
        };



        const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

        checkboxes.forEach((checkbox) => {
            checkbox.addEventListener('change', function () {
                if (this.checked) {
                    checkboxes.forEach((otherCheckbox) => {
                        if (otherCheckbox !== this) {
                            otherCheckbox.checked = false;
                        }
                    });
                }
            });
        });</script>
    <!--#endregion host-club.php js-->
    <!--#region club.php JS-->
    <script>// Get all the div elements

        var selectlocationstorehostsection = document.querySelectorAll('.select-location-store-host-section');
        // Add click event listeners to each div
        selectlocationstorehostsection.forEach(function (div) {
            div.addEventListener('click', function () {
                // Remove the 'bg-red' class from all selectlocationstorehostsection
                selectlocationstorehostsection.forEach(function (d) {
                    d.classList.remove('active');

                });
                // Add the 'bg-red' class to the clicked div
                this.classList.add('active');
            });
        });</script>
    <!--#endregion club.php JS-->
    <!--#region new-store.php JS-->
    <script>var hosts = document.querySelectorAll('.hosts-that-match-you');
        hosts.forEach(function (host) {
            host.addEventListener('click', function () {
                this.classList.toggle('active');
            });
        });</script>
    <!--#endregion new-store.php JS-->
    <!--#region near-location.php JS-->
    <script>const tabs = document.querySelector(".wrapper");
        const tabButton = document.querySelectorAll(".tab-button");
        const contents = document.querySelectorAll(".content");

        tabs.onclick = (e) => {
            const id = e.target.dataset.id;
            if (id) {
                tabButton.forEach((btn) => {
                    btn.classList.remove("active");
                });
                e.target.classList.add("active");

                contents.forEach((content) => {
                    content.classList.remove("active");
                });
                const element = document.getElementById(id);
                element.classList.add("active");
            }
        };</script>
    <script>// Get all the div elements

        var selectnearlocation = document.querySelectorAll('.select-near-location');

        // Add click event listeners to each div
        selectnearlocation.forEach(function (div) {
            div.addEventListener('click', function () {
                // Remove the 'bg-red' class from all selectnearlocation
                selectnearlocation.forEach(function (d) {
                    d.classList.remove('active');

                });
                // Add the 'bg-red' class to the clicked div
                this.classList.add('active');

            });
        });</script>
    <!--#endregion near-location.php JS-->
    <!--#region map.php JS-->
    <script>
        var map;
        var marker;
        var service;
        var lastClickedCoordinates = null;
        var infoWindows = [];
        var trackUserInterval;
        var customMarkerPosArray = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ClubDetailMapData));

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15, // Set the initial zoom level
                disableDefaultUI: true // Disable default UI elements
            });

            // Loop through the array of custom marker positions
            for (var i = 0; i < customMarkerPosArray.length; i++) {
                var customMarkerPos = customMarkerPosArray[i];
                createCustomMarker(customMarkerPos);
            }
            // Start tracking user's location
            trackUserLocation();
        }

        function trackUserLocation() {
            trackUserInterval = navigator.geolocation.watchPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                if (!marker) {
                    // Create marker for current location if not already created
                    var markerIcon = {
                        path: google.maps.SymbolPath.CIRCLE,
                        fillColor: '#d75a8b',
                        fillOpacity: 1,
                        strokeColor: '#FFF',
                        strokeWeight: 2,
                        scale: 10
                    };

                    marker = new google.maps.Marker({
                        position: pos,
                        map: map,
                        icon: markerIcon
                    });
                } else {
                    // Update marker position
                    marker.setPosition(pos);
                }

                // Optionally, center the map on the user's position
                map.setCenter(pos);
            }, handleLocationError);
        }

        function stopTrackingUserLocation() {
            if (trackUserInterval) {
                navigator.geolocation.clearWatch(trackUserInterval);
                trackUserInterval = null;
            }
        }

        function searchNearby(location) {
            service.nearbySearch({
                location: location,
                radius: 500, // Search radius in meters
                type: ['restaurant'] // Only search for restaurants
            }, processResults);
        }

        function processResults(results, status) {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                    createMarker(results[i]);
                }
            }
        }

        function createMarker(place) {
            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location,
                title: place.name,
                icon: {
                    scaledSize: new google.maps.Size(100, 100) // Scaled size of the marker icon
                }
            });
            // Add click listener to show place details
            // Add click listener to show place details
            google.maps.event.addListener(map, 'click', function (event) {
                //console.log("Clicked Location:", event);
                var data = service.getDetails({
                    placeId: event.placeId // Change event.place_id to event.placeId
                })
                console.log({
                    data
                })
            });

        }

        function createCustomMarker(customMarkerPos) {
            var customMarker = new google.maps.Marker({
                position: customMarkerPos,
                map: map,
                title: 'Custom Marker',
                icon: {
                    scaledSize: new google.maps.Size(100, 100) // Scaled size of the marker icon
                }
            });


            // Create info window for the custom marker

            // Add click event listener to show info window
            customMarker.addListener('click', function () {
                if (customMarkerPos.clubNameEnglish) {
                    var clubCard = document.getElementById('map-card');
                    clubCard.style.display = 'flex'; // Show the map card
                    var clubImage = document.getElementById('clubImage');
                    var clubNameEng = document.getElementById('clubNameEng');
                    var clubNameJpn = document.getElementById('clubNamejpn');
                    var rating = document.getElementById('rating');
                    var clubUrl = document.getElementById('clubUrl');
                    var ratingElement = document.getElementById('rating-label-id');

                } else {
                    var clubCard = document.getElementById('map-card');
                    clubCard.style.display = 'none'; // Hide the map card if clubNameEng is empty
                }


                clubImage.src = customMarkerPos.clubLogo;
                clubNameEng.textContent = customMarkerPos.clubNameEnglish;
                clubNameJpn.textContent = customMarkerPos.clubNameJapanese;
                rating.textContent = customMarkerPos.ratingScale;
                clubUrl.href = customMarkerPos.URL;
                ratingElement.innerHTML = generateStarIcons(customMarkerPos.ratingScale);
                console.log("Rating stars Count: " + customMarkerPos.ratingScale);
                //console.log({
                //    customMarkerPos

                //})

            });

        }

        function generateStarIcons(rating) {
            const fullStars = Math.floor(rating);
            const halfStar = rating % 1 !== 0;
            const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

            let starsHTML = '';
            for (let i = 0; i < fullStars; i++) {
                starsHTML += '<i class="las la-star"></i>';
            }
            if (halfStar) {
                starsHTML += '<i class="las la-star-half-alt"></i>';
            }
            for (let i = 0; i < emptyStars; i++) {
                starsHTML += '<i class="lar la-star"></i>';

            }
            return starsHTML;
        }

        function handleLocationError(error) {
            console.error("Error getting user's location:", error);
        }

        function closeAllInfoWindows() {
            for (var i = 0; i < infoWindows.length; i++) {
                infoWindows[i].close();
            }
        }

        function closeAllInfoWindowsExcept(exceptInfoWindow) {
            for (var i = 0; i < infoWindows.length; i++) {
                if (infoWindows[i] !== exceptInfoWindow) {
                    infoWindows[i].close();
                }
            }
        }

        // Function to set user's current location
        function setUserLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    map.setCenter(pos);
                    map.setZoom(15); // Set the zoom level to 24

                    // Create marker for current location
                    var markerIcon = {
                        path: google.maps.SymbolPath.CIRCLE,
                        fillColor: '#ff0000',
                        fillOpacity: 0.8,
                        strokeColor: '#FFF',
                        strokeWeight: 2,
                        scale: 10
                    };

                    if (marker) {
                        marker.setPosition(pos);
                    } else {
                        marker = new google.maps.Marker({
                            position: pos,
                            map: map,
                            icon: markerIcon
                        });
                    }
                }, handleLocationError);
            } else {
                console.error("Geolocation is not supported by this browser");
            }
        }
    </script>
    <!--#endregion map.php JS-->
    <!--#region time-index.php-->
    <script>var showTimeLists = document.querySelectorAll('.showTimeList');

        showTimeLists.forEach(function (showTimeList) {
            showTimeList.addEventListener('click', function (event) {
                var timeList = showTimeList.nextElementSibling;
                if (timeList.style.display === "none" || timeList.style.display === "") {
                    timeList.style.display = "block";
                } else {
                    timeList.style.display = "none";
                }
                event.stopPropagation(); // Prevents the click event from bubbling up to the document
            });
        });

        document.addEventListener('click', function (event) {
            // Loop through each showTimeList
            showTimeLists.forEach(function (showTimeList) {
                var timeList = showTimeList.nextElementSibling;
                // Check if the click target is not the showTimeList, its timeList, or their descendants and close the timeList if it's open
                if (!showTimeList.contains(event.target) && !timeList.contains(event.target) && timeList.style
                    .display === "block") {
                    timeList.style.display = "none";
                }
            });
        });</script>
    <script>document.querySelectorAll('.timeList').forEach(item => {
            item.addEventListener('click', event => {
                if (event.currentTarget.classList.contains('disabled')) {
                    return;
                }

                document.querySelectorAll('.timeList').forEach(item => {
                    item.classList.remove('active');
                });
                event.currentTarget.classList.add('active');

                // Store the value if timeList has active class
                if (event.currentTarget.classList.contains('active')) {
                    const timeValueElement = event.currentTarget.querySelector('.timeValue');
                    if (timeValueElement) {
                        var timeValue = timeValueElement.getAttribute('data-info');
                        var selectedTimeDiv = document.getElementById("selected-time-id");
                        selectedTimeDiv.innerText = timeValueElement.innerHTML;
                        $('#time-id').val(timeValue.trim());
                    }
                }
            });
        });</script>
    <!--#endregion time-index.php-->
    <!--#region Button Submit Function-->
    <script>
        function ClubFilterSubmitButton() {
            EnableLoaderFunction();
            getSelectedCheckboxValues('search-by-store-category', 'club-category-id', 'club-category-class');// Call the function for the first set of checkboxes
            getSelectedCheckboxValues('search-by-plan', 'price-id', 'plan-price-class');// Call the function for the second set of checkboxes
             var locationDIV = document.getElementById("club-location-id");
             let locationId = '';
             if (locationDIV && locationDIV.classList.contains("active")) {
                 locationId = locationDIV.querySelector(".locationValue").getAttribute("data-info");
             }
             if (!locationId || locationId.trim() === '') {
                 locationId = '@FilteredLocationId';
             }
             $('#LocationId_1').val(locationId);
            $('#club-search').val($('#main-search-id').val());
            var form = document.getElementById("club-filter-form-id");
            form.submit();
            DisableLoaderFunction();
        }

        function HostFilterSubmitButton() {
            EnableLoaderFunction();
            getSelectedCheckboxValues('choose-your-height', 'host-height-id', 'host-height');// Call the function for the first set of checkboxes
            getSelectedCheckboxValues('select-age', 'host-age-id', 'host-age');// Call the function for the second set of checkboxes
            getSelectedCheckboxValues('choose-blood-type', 'host-bloodtype-id', 'host-blood-type');// Call the function for the second set of checkboxes
            getSelectedCheckboxValues('hostConstellationGroup', 'host-constellationgroup-id', 'host-constellation-group-class');// Call the function for the second set of checkboxes

            var locationDIV = document.getElementById("host-location-id");
            let locationId = '';
            if (locationDIV && locationDIV.classList.contains("active")) {
                locationId = locationDIV.querySelector(".locationValue").getAttribute("data-info");
            }
            if (!locationId || locationId.trim() === '') {
                locationId = '@ViewBag.LocationId';
            }
            $('#LocationId_2').val(locationId);
            $('#host-search').val($('#main-search-id').val());
            $('#host-occupation-id').val($('#host-occupation-ddl-id').val());
            var form = document.getElementById("host-filter-form-id");
            form.submit();
            DisableLoaderFunction();
        }

        function getSelectedCheckboxValues(checkboxName, targetElementId, checkboxClass) {
            var checkboxes = document.querySelectorAll('input[type="checkbox"][name="' + checkboxName + '"]');
            var selectedValues = [];
            checkboxes.forEach(function (checkbox) {
                if (checkbox.checked && checkbox.classList.contains(checkboxClass)) {
                    selectedValues.push(checkbox.value);
                }
            });
            document.getElementById(targetElementId).value = selectedValues.join(', ');
        }

        function NewClubRenderFunction() {
            const locationId = ('@ViewBag.LocationId'!== null && '@ViewBag.LocationId' !== "" && typeof '@ViewBag.LocationId' !== "undefined") ? '@ViewBag.LocationId' : "";
            window.location.href = `/Search/ClubFilter?LocationId=${locationId}&NewClub=${true}`;
        }

        function NewHostRenderFunction() {
            const locationId = ('@ViewBag.LocationId' !== null && '@ViewBag.LocationId' !== "" && typeof '@ViewBag.LocationId' !== "undefined") ? '@ViewBag.LocationId' : "";
            window.location.href = `/Search/HostFilter?LocationId=${locationId}&NewHost=${true}`;
        }

        function Tab3SubmitFunction() {
            const locationId = ('@ViewBag.LocationId' !== null && '@ViewBag.LocationId' !== "" && typeof '@ViewBag.LocationId' !== "undefined") ? '@ViewBag.LocationId' : "";
            var filter = $('#main-search-id').val();
            window.location.href = `/Search/ClubFilter?LocationId=${locationId}&SearchFilter=${filter}`;
        }

        function Tab4SubmitFunction() {
            var filter = $('#main-search-id').val();
             var locationDIV = document.getElementById("tab4-loaction-id");
                 let locationId = '';
                 if (locationDIV && locationDIV.classList.contains("active")) {
                     locationId = locationDIV.querySelector(".locationValue").getAttribute("data-info");
                 }
                 if (!locationId || locationId.trim() === '') {
                     locationId = '@ViewBag.LocationId';
                 }
            window.location.href = `/Search/ClubFilter?LocationId=${locationId}&SearchFilter=${filter}`;
        }

        function ClearFunction() {
            window.location.reload();
        }

                function ClubDetailActionFunction(i, j) {
            window.location.href = "/LocationManagement/ClubDetail_V2?LocationId=" + i + "&&ClubId=" + j;
        }
    </script>
    <!--#endregion Button Submit Function-->
}