@using Newtonsoft.Json

@functions {
    public dynamic ReadJson()
    {
        string filePath = HttpContext.Current.Server.MapPath("~/App_Data/RedirectURLConfiguration.json");
        string jsonContent = System.IO.File.ReadAllText(filePath);
        var jsonData = JsonConvert.DeserializeObject<dynamic>(jsonContent);
        return jsonData;
    }
}
@{
    var jsonData = ReadJson();
}

@model CRS.CUSTOMER.APPLICATION.Models.Home.SetRegistrationPasswordModel
@{
    Layout = null;
}
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/Content/assets/css/tailwind.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/global_v1.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/club.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/customcss.css">
    <link rel="stylesheet" href="/Content/assets/css/owl-carousel/owl.carousel.min.css">
    <link rel="stylesheet" href="/Content/assets/css/owl-carousel/owl.theme.default.min.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/responsive.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.css" rel="stylesheet" />
    <script src="/Content/assets/js/owl.carousel.js"></script>
    <script src="/Content/assets/js/modal.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tw-elements/dist/css/tw-elements.min.css" />
    <link rel="stylesheet"
          href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
    <link rel="stylesheet"
          href="https://maxst.icons8.com/vue-static/landings/line-awesome/font-awesome-line-awesome/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/select2-bootstrap-css/1.4.6/select2-bootstrap.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js"></script>
    <script src="/Content/js/NotificationMessageToaster.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    @*<title>Hoslog | Set Password</title>*@
    <title> パスワードの再設定‖ホスログ《 ホストクラブ初回来店・ネット予約 》</title>
</head>

<body class="md:hidden">
    <style>
        .header {
            color: #18181B;
            margin-top: 12px;
            font-size: 16px;
            font-style: normal;
            font-weight: 700;
            line-height: 16px;
        }

        .inputWrapper {
            border: 1px solid #ECECEC;
            border-radius: 4px;
        }

            .inputWrapper > input {
                border: none;
                outline: none;
                background: none;
            }

        input::placeholder {
            color: var(--silver, #A6A6A6);
            font-size: 12px;
            font-style: normal;
            font-weight: 400;
            line-height: 18px;
        }

        .nextButton {
            background: #D75A8B;
            padding: 8px 12px;
            color: #fff;
            font-weight: 700;
            line-height: 24px;
            font-size: 14px;
        }
        /* <style> */
        input {
            /* margin-bottom: 10px; */
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 3px;
            width: 200px;
            padding-left: 25px;
            /* Space for icon */
            background-repeat: no-repeat;
            background-position: 3px center;
            /* Icon position */
        }

            input:focus {
                border: 1px solid #D75A8B !important;
                border-radius: 3px;
            }

        /* .message ul {
            list-style-type: none;
            padding-left: 10px;
        }

            .message ul li {
                margin-bottom: 5px;
                padding-left: 4px;
            }

                .message ul li::marker {
                    color: green;
                    margin-right: 1ch;
                    content: '✓';
                }

                .message ul li.error::marker {
                    color: red;
                    margin-right: 1ch;
                    content: 'X';
                }*/

        /* Remove default list styles and add padding */
        .message ul {
            list-style-type: none;
            padding-left: 10px;
        }

            /* Style for list items */
            .message ul li {
                margin-bottom: 5px;
                padding-left: 4px;
                position: relative;
            }

                /* Custom marker for successful items */
                .message ul li.success::before {
                    content: '✓'; /* Unicode character for checkmark */
                    color: green;
                    margin-right: 5px; /* Adjust as needed */
                }

                /* Custom marker for error items */
                .message ul li.error::before {
                    content: 'X'; /* Unicode character for cross mark */
                    color: red;
                    margin-right: 5px; /* Adjust as needed */
                }


        .waitingMessageWrapper {
            border-radius: 4px;
            background: #FFEDED;
            margin-top: 16px;
            /*display: none;*/
        }

        .waitingMessage {
            color: #000;
            font-feature-settings: 'clig' off, 'liga' off;
            font-size: 10px;
            font-style: normal;
            font-weight: 500;
            line-height: normal;
        }


        @@media(min-width: 1005px) {
            #leftfix {
                top: 10%;
                max-width: 300px;
            }

            #innerfixed {
                top: 10%;
                max-width: 300px;
            }

            .image-container {
                display: flex;
                justify-content: center;
                align-items: center;
                overflow: hidden;
            }

                .image-container img {
                    max-width: 100%;
                    height: auto;
                    object-fit: contain;
                }

            .imgclasssecond {
                width: 300px !important;
                height: 76px !important;
            }

            .imgclassfirst {
                width: 300px !important;
                height: 152px !important;
            }
        }

        @@media(min-width: 640px) and (max-width: 730px) {

            #innerfixed {
                top: 24% !important;
                max-width: 126px !important;
            }

            .image-container {
                display: flex;
                justify-content: center;
                align-items: center;
                overflow: hidden;
            }

                .image-container img {
                    max-width: 100%;
                    height: auto;
                    object-fit: contain;
                }

            .imgclasssecond {
                width: 126px !important;
                height: 35px !important;
            }

            .imgclassfirst {
                width: 126px !important;
                height: 63px !important;
            }
        }


        @@media(min-width: 731px) and (max-width: 800px) {

            #innerfixed {
                top: 24% !important;
                max-width: 158px !important;
            }

            .image-container {
                display: flex;
                justify-content: center;
                align-items: center;
                overflow: hidden;
            }

                .image-container img {
                    max-width: 100%;
                    height: auto;
                    object-fit: contain;
                }

            .imgclasssecond {
                width: 158px !important;
                height: 76px !important;
            }

            .imgclassfirst {
                width: 158px !important;
                height: 100px !important;
            }
        }

        @@media(min-width: 801px) and (max-width: 900px) {

            #innerfixed {
                top: 15% !important;
                max-width: 191px !important;
            }

            .image-container {
                display: flex;
                justify-content: center;
                align-items: center;
                overflow: hidden;
            }

                .image-container img {
                    max-width: 100%;
                    height: auto;
                    object-fit: contain;
                }

            .imgclasssecond {
                width: 191px !important;
                height: 76px !important;
            }

            .imgclassfirst {
                width: 191px !important;
                height: 100px !important;
            }
        }

        @@media(min-width: 901px) and (max-width: 970px) {

            #innerfixed {
                top: 9% !important;
                max-width: 252px !important;
            }

            .image-container {
                display: flex;
                justify-content: center;
                align-items: center;
                overflow: hidden;
            }

                .image-container img {
                    max-width: 100%;
                    height: auto;
                    object-fit: contain;
                }

            .imgclasssecond {
                width: 252px !important;
                height: 76px !important;
            }

            .imgclassfirst {
                width: 252px !important;
                height: 152px !important;
            }
        }

        @@media(min-width: 918px) and (max-width: 1004px) {

            #innerfixed {
                top: 9% !important;
                max-width: 230px !important;
            }

            .image-container {
                display: flex;
                justify-content: center;
                align-items: center;
                overflow: hidden;
            }

                .image-container img {
                    max-width: 100%;
                    height: auto;
                    object-fit: contain;
                }

            .imgclasssecond {
                width: 300px !important;
                height: 76px !important;
            }

            .imgclassfirst {
                width: 300px !important;
                height: 152px !important;
            }
        }
    </style>
    <style>
        .modal-content {
            max-width: 100%;
            width: 400px;
        }

        .save_modal-content {
            background: #fff;
            max-width: 100%;
            width: 312px;
            padding-top: 32px;
            padding-bottom: 32px;
        }

        .modal_header {
            color: var(--1_Darker_Primary, #D17979);
            text-align: center;
            font-size: 14px;
            font-style: normal;
            font-weight: 700;
            line-height: 100%; /* 14px */
        }

        .save_cont {
            margin-top: 18px;
        }

        .savebtn {
            color: #FFF;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            padding-top: 14px;
            padding-bottom: 14px;
            padding-right: 32px;
            padding-left: 32px;
            gap: 12px;
            border-radius: 4px;
            background: var(--Darker_Primary, #D75A8B);
        }

        input:focus {
            border: 1px solid #d75a8b !important;
        }

        input:focus-visible {
            border: 1px solid #d75a8b !important;
            outline: none
        }

        ul.delete-confirm {
            list-style-type: circle;
            width: 80%;
            margin: 14px auto;
            color: #292F33;
        }

        ul li {
            text-align: start;
            gap: 5px;
            margin-bottom: 5px;
            padding-left: 12px;
            color: #292F33;
        }

        /* li::marker {
            content: "\25CF";
            color: #292F33;
            font-size: 0.5em;
        }*/

        .disabled-div {
            opacity: 0.5;
            pointer-events: none;
            background: #F0F0F0;
            color: #BEBEBE;
        }

        .savebtndivcss {
            cursor: not-allowed;
            pointer-events: none;
        }
        /* custom select*/
        .custom-select {
            position: relative;
            display: inline-block;
        }

        select {
            appearance: none;
            padding-right: 30px; /* Space for the custom arrow */
        }

        .custom-arrow {
            position: absolute;
            right: 13px; /* Adjust this to move the icon horizontally */
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none; /* Ensures the arrow does not block clicks */
        }

        .profileimg2 {
            width: 100%;
            height: 100%;
        }

        .editoption2 {
            margin-left: 44px;
            /* margin-top: 44px; */
            height: 24px;
            width: 24px;
            border-radius: 55px;
            justify-items: center;
            position: absolute;
            background-color: #fff;
            top: 41px;
            border: 1px solid #e8e8e8;
            z-index: 0;
        }
    </style>
    <div id="test">
        <div id="leftcontent" style="margin-top: 30%; " class="flex  flex-col items-center ">
            <div id="leftfix" class="fixed">
                <a href="/" class="flex flex-row justify-center">
                    <img src="~/content/assets/images/bglogo.png" />
                </a>
                <div id="siteurl" class="flex flex-row justify-center">
                    <p style="font-size: 25px; font-weight: 600; margin-bottom: 26px" class="text-black">https://hoslog.jp/  </p>
                </div>
                @* <a href="https://hoslog.jp/user/register" style="max-width: 300px; height: 57px; background-color: #D75A8B; border-radius: 2px; cursor: pointer; " class="flex flex-row justify-center items-center text-center">
            <div>
                <p style="font-size:18px;font-weight:600 ; " class="text-white">新規会員登録</p>
            </div>
        </a>
        <a href="https://owner.hoslog.jp/owner/register/" target="_blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor: pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
            <div>
                <p style="font-size:18px;font-weight:600" class="text-black">店舗オーナー登録</p>
            </div>
        </a>
        <a href="https://affiliate.hoslog.jp/auth/register" target="_blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor:pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
            <div>
                <p style="font-size:18px;font-weight:600" class="text-black">アフィリエイター登録</p>
            </div>
        </a>*@

                <a href="@jsonData.CustomerRegistration.url" style="max-width: 300px; height: 57px; background-color: #D75A8B; border-radius: 2px; cursor: pointer; " class="flex flex-row justify-center items-center text-center">
                    <div>
                        <p style="font-size:18px;font-weight:600 ; " class="text-white">@jsonData.CustomerRegistration.text</p>
                    </div>
                </a>
                <a href="@jsonData.ClubRegistration.url" target="_blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor: pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
                    <div>
                        <p style="font-size:18px;font-weight:600" class="text-black">@jsonData.ClubRegistration.text</p>
                    </div>
                </a>
                <a href="@jsonData.AffiliateRegistration.url" target="_blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor:pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
                    <div>
                        <p style="font-size:18px;font-weight:600" class="text-black">@jsonData.AffiliateRegistration.text</p>
                    </div>
                </a>

            </div>



        </div>
        <div id="innersec">
            @*    <div>*@
            <!-- for back button -->
            <div class="flex items-center  border-b border-b-[#E8E8E8] sticky top-0 bg-white z-[10] relative px-4 py-[10px] h-[44px]" id="backbutton_id">
                <div class="flex gap-2 items-center absolute top-[12px] text-sm">
                    <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                        <path d="M15.2347 2.74084C14.7855 2.29167 14.0614 2.29167 13.6122 2.74084L5.99469 10.3583C5.63719 10.7158 5.63719 11.2933 5.99469 11.6508L13.6122 19.2683C14.0614 19.7175 14.7855 19.7175 15.2347 19.2683C15.6839 18.8192 15.6839 18.095 15.2347 17.6458L8.59802 11L15.2439 4.35417C15.6839 3.91417 15.6839 3.18084 15.2347 2.74084Z"
                              fill="#BCB08A" />
                    </svg>戻る
                </div>
                <div class="text-center w-full font-bold"></div>
            </div>
            <!-- back button end -->
            <div class=" px-6">
                <div class="header">
                    パスワードを作成する
                </div>

                <div id="waitingMessageWrapper" style="display:none">
                    <div class="flex p-2 gap-2 items-center waitingMessageWrapper">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <path d="M8 1.5C4.416 1.5 1.5 4.416 1.5 8C1.5 11.584 4.416 14.5 8 14.5C11.584 14.5 14.5 11.584 14.5 8C14.5 4.416 11.584 1.5 8 1.5ZM8 2.5C8.72252 2.49912 9.43811 2.64079 10.1058 2.91688C10.7735 3.19297 11.3801 3.59806 11.891 4.10896C12.4019 4.61985 12.807 5.22652 13.0831 5.8942C13.3592 6.56189 13.5009 7.27748 13.5 8C13.5009 8.72252 13.3592 9.43811 13.0831 10.1058C12.807 10.7735 12.4019 11.3801 11.891 11.891C11.3801 12.4019 10.7735 12.807 10.1058 13.0831C9.43811 13.3592 8.72252 13.5009 8 13.5C7.27748 13.5009 6.56189 13.3592 5.8942 13.0831C5.22652 12.807 4.61985 12.4019 4.10896 11.891C3.59806 11.3801 3.19297 10.7735 2.91688 10.1058C2.64079 9.43811 2.49912 8.72252 2.5 8C2.49912 7.27748 2.64079 6.56189 2.91688 5.8942C3.19297 5.22652 3.59806 4.61985 4.10896 4.10896C4.61985 3.59806 5.22652 3.19297 5.8942 2.91688C6.56189 2.64079 7.27748 2.49912 8 2.5ZM7.5 5V6H8.5V5H7.5ZM7.5 7V11H8.5V7H7.5Z"
                                  fill="black" />
                        </svg>
                        <p class="waitingMessage">
                            @TempData["ForgetPWErrorMessage"]
                        </p>
                    </div>
                </div>
                @using (Html.BeginForm("SetNewPasswordV2", "Home", FormMethod.Post, new { @role = "form", @id = "Form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.AgentId)
                    @Html.HiddenFor(model => model.MobileNumber)
                    @Html.HiddenFor(model => model.UserId)
                    @Html.HiddenFor(model => model.NickName)
                    @Html.HiddenFor(model => model.ProcessId)
                    <input type="hidden" name="IsPasswordForceful" value="@Model.IsPasswordForceful" />

                    <div class="relative inputWrapper mt-4 mb-[5px]">
                        @Html.TextBoxFor(model => model.Password, new
                   {
                       @class = "w-full focus:outline-none ring-0 focus:ring-0 focus:ring-transparent",
                       @type = "password",
                       @name = "password",
                       @id = "password",
                       @placeholder = "パスワード",
                       @maxlength = "32"
                   })
                        @*<input type="password" class="w-full   focus:outline-none ring-0 focus:ring-0 focus:ring-transparent"
                            style="" placeholder="パスワード" name="password" id="password" required>*@
                        <i class="las la-eye password-eye absolute top-3 right-2 " onclick="togglePassword()" required></i>
                    </div>
                    @*<span class="validationMessage">
                            @Html.ValidationMessageFor(m => m.Password)
                        </span>*@
                    <ul id="messages" class="message"></ul>
                    <div style="color:#666" id="error2" class="hidden text-[#666] text-[10px] font-[400]">Field Empty</div>
                    <div class="relative inputWrapper mt-2 mb-[5px]">
                        @Html.TextBoxFor(model => model.ConfirmPassword, new
                   {
                       @class = "w-full focus:outline-none ring-0 focus:ring-0 focus:ring-transparent",
                       @type = "password",
                       @name = "confirmPassword",
                       @id = "confirmPassword",
                       @placeholder = "パスワード確認",
                       @maxlength = "32"
                   })
                        @*<input type="password" class="w-full   focus:outline-none ring-0 focus:ring-0 focus:ring-transparent"
                            style="" placeholder="パスワード" name="confirmPassword" id="confirmPassword" required>*@
                        <i class="las la-eye password-eye absolute top-3 right-2 " onclick="togglePassword()" required></i>
                    </div>
                    @*<span class="validationMessage">
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </span>*@
                    <ul id="messagesConfirm" class="message"></ul>
                    <div style="color:#666" id="error2" class="hidden text-[#666] text-[10px] font-[400]">Field Empty</div>
                    <!-- for next button  -->
                    <div class="mt-6">
                        <button type="submit" class="nextButton border rounded-lg  w-full">次</button>
                    </div>
                }
            </div>
        </div>
        <!--<div id="rightcontent" style="margin-top: 10%; " class="flex flex-col items-center">
        <div id="innerfixed" class="fixed   flex flex-col gap-2">-->
        @* <div >*@
        <!--<img src="../../content/assets/images/hpi1.jpeg" style="width:inherit" />-->
        @* </div>
            <div>*@
        <!--<img src="../../content/assets/images/hpi2.jpeg" style="width:inherit" />-->
        @*  </div>
            <div>*@
        <!--<img src="../../content/assets/images/hpi3.jpeg" style="width:inherit" />-->
        @*</div>
            <div>*@
        <!--<img src="../../content/assets/images/hpi4.jpeg" style="width:inherit" />-->
        @*  </div>
            <div>*@
        <!--<img src="../../content/assets/images/hpi5.jpeg" style="width:inherit" />-->
        @* </div>
            <div>*@
        <!--<img src="../../content/assets/images/hpi6.jpeg" style="width:inherit" />-->
        @*  </div>*@
        <!--</div>

        </div>-->

        <div id="rightcontent" style="margin-top: 10%; " class="flex flex-col items-center">
            <div id="innerfixed" class="fixed   flex flex-col gap-2">
                @{
                    if (Session["AdvertisementImage"] != null)
                    {
                        var advertisementimage = Session["AdvertisementImage"] as List<CRS.CUSTOMER.SHARED.CommonManagement.AdvertisementCommon>;

                        if (advertisementimage != null && advertisementimage.Count > 0)
                        {
                            var i = 0;
                            foreach (var item in advertisementimage)
                            {
                                @*<img src="@item"  style="width:300px;height:152px;"/>*@
                                if (item.status.ToUpper() == "A")
                                {
                                    if (i < 2)
                                    {
                                        <div class="image-container">
                                            <a href="@item.link" target="_blank">
                                                <img src="@item.image" class="imgclassfirst" alt="Advertisement Image" />
                                            </a>
                                            @*<img src="@item.image" class="imgclassfirst" />*@
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="image-container">
                                            <a href="@item.link" target="_blank">
                                                <img src="@item.image" class="imgclasssecond" alt="Advertisement Image" />
                                            </a>
                                            @*<img src="@item.image" class="imgclasssecond" />*@
                                        </div>
                                    }
                                }
                                i++;

                            }
                        }
                    }

                }
            </div>

        </div>

    </div>
    <div id="confimation_modal" class="modal modalWrapper "
         style="display:none;">
        <div class="save_modal-content relative" style="max-width: 312px; border-radius: 15px;">
            <span class=" absolute  z-30 text-[#fff] text-[28px] cursor-pointer right-3" onclick="closeModal('confimation_modal')"
                  style="top:-49px">&times;</span>
            <div class="flex flex-col gap-1">
                <div class="modal_header">
                    このページを離れますか?
                </div>
                <div class="text-[12px] flex justify-center mb-2">
                    行った操作が保存されない可能性があります。
                </div>
            </div>
            <div class="border"></div>
            <div class="save_cont flex gap-2 justify-center mt-4">
                <button onclick="window.location.href='@Url.Action("ForgotPassword","Home")'" type="submit" class="savebtn w-[135px]">
                    はい
                </button>
                <div onclick="closeModal('confimation_modal')" class="flex justify-center items-center underline px-8 w-[135px]">
                    いいえ
                </div>
            </div>
        </div>
    </div>
    <script>
        $('#backbutton_id').click(function () {
            openModal('confimation_modal')
        });
    </script>
    <script>
        document.querySelectorAll('.password-eye').forEach(function (eyeIcon) {
                    eyeIcon.addEventListener('click', function () {
                        togglePassword(this);
                    });
        });
        var tempDataValue = "@Html.Raw(TempData["ForgetPWErrorMessage"])";
         if (tempDataValue !== "") {
             $("#waitingMessageWrapper").css("display", "block");
             setTimeout(function () {
                 $("#waitingMessageWrapper").css("display", "none");
             }, 5000);
         }
        function togglePassword(eyeIcon) {
            const passwordInput = eyeIcon.previousElementSibling; // Get the input element before the icon

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeIcon.classList.remove('la-eye');
                eyeIcon.classList.add('la-eye-slash');
            } else {
                passwordInput.type = 'password';
                eyeIcon.classList.remove('la-eye-slash');
                eyeIcon.classList.add('la-eye');
            }
        }</script>
    <script>
        const passwordInput = document.getElementById('password');
        const messagesElement = document.getElementById('messages');
        // validatePassword(); // Initial validation
        passwordInput.addEventListener('focus', function () {
            validatePassword();
        });
        passwordInput.addEventListener('input', function () {
            validatePassword();
        });
        passwordInput.addEventListener('focusout', function () {
            validatePassword(true);
        });
        function validatePassword(showMessage) {
            const password = passwordInput.value;
            const hasAlphanumeric = /^(?=.*[0-9])/.test(password);
            const hasUpperCase = /^(?=.*[A-Z])(?=.*\d).+$/.test(password);
            const hasLowerCase = /^(?=.*[a-z])(?=.*\d).+$/.test(password);
            const hasMinLength = password.length >= 8 && password.length <= 32;;
            const hasLetterAndDigit = /^(?=.*[a-z])(?=.*[A-Z]).+$/.test(password);
            const isStrongPassword = hasUpperCase && hasLowerCase && hasMinLength;
            if (showMessage && isStrongPassword) {
                messagesElement.innerHTML = '<ul><li class="success text-[10px] font-normal leading-[13.62px]" >パスワードの安全性が高いです</li></ul>';
                ispasswordstrong = true;
            } else {
                const messages = [
                    { valid: hasMinLength, message: '最小 8 文字以上、最大 32 文字以内にしてください' },
                    { valid: hasAlphanumeric, message: '1 つの数字を含めてください' },
                    { valid: hasUpperCase, message: '1 つの大文字を含めてください' },
                    { valid: hasLowerCase, message: '1 つの小文字を含めてください' },
                ];
                messagesElement.innerHTML = '<ul>' +
                    messages.map(({ valid, message }) => `<li class="${valid ? 'success' : 'error'} text-[10px] text-[#666] font-normal leading-[13.62px]">${message}</li>`).join('') +
                    '</ul>';
                ispasswordstrong = false;
            }
        }</script>
    <script>
        const passwordInput1 = document.getElementById('password');
        const confirm1 = document.getElementById('confirmPassword');
        const messagesElement1 = document.getElementById('messagesConfirm');
        confirm1.addEventListener("input", function () {
            const password = passwordInput1.value;
            const confirmPassword = confirm1.value;

            if (confirmPassword !== "" && password === confirmPassword) {
                messagesElement1.innerHTML = '<ul><li class="success text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致する</li></ul>';
            } else {
                messagesElement1.innerHTML = '<ul><li class="error text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致しません</li></ul>';
            }
        });
        passwordInput1.addEventListener("input", function () {
            const password = passwordInput1.value;
            const confirmPassword = confirm1.value;
            if (confirmPassword !== "") {
                if (confirmPassword !== "" && password === confirmPassword) {
                    messagesElement1.innerHTML = '<ul><li class="success text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致する</li></ul>';
                } else {
                    messagesElement1.innerHTML = '<ul><li class="error text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致していません</li></ul>';
                }
            }
        });

        $("#FormSubmit").click(function (event) {
            $("#Form").submit();
        });</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script>
    //For toaster Notification
    $(function () {
    {
        @if (TempData["Notifications"] != null)
        {
            var messages = (List<CRS.CUSTOMER.SHARED.NotificationModel>)TempData["Notifications"];
            foreach (var note in messages)
            {
                <text>showNotification("@note.Message", "@note.Title", "@note.NotificationType");</text>
            }
        }
        @{
            ViewBag.Notifications = string.Empty;
        }
        }
    });
    </script>
</body>
</html>
