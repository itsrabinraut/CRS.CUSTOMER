@model CRS.CUSTOMER.APPLICATION.Models.Home.SetRegistrationPasswordModel
@{Layout = null;}
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hoslog | Set Password</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <!-- flowbite -->
    <!-- tailwind -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="~/Content/js/NotificationMessageToaster.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&family=Noto+Sans+JP:wght@400;500;600;700;800&family=PT+Sans:wght@400;700&family=Poppins:wght@500;600;700&family=Roboto+Condensed:wght@500;600;700&family=Roboto:wght@400;500;700;900&display=swap" rel="stylesheet">
    <style>
        :root {
            /*font-family: 'Noto Sans JP', sans-serif;*/
            font-family: 'Noto Sans JP';
            color: #292f33;
            font-size: 16px;
        }
    </style>
    <style>


        .input-field input {
            border: 1px solid #D9D9D9;
            border-radius: 3px;
        }

            .input-field input:focus {
                border-color: #d75a8b !important;
                outline: none;
                box-shadow: none
            }

            .input-field input:focus-visible {
                outline: none;
                box-shadow: none
            }
    </style>
</head>
<body class="md:hidden">
    <div class="mx-[16px]">
        <div class="flex justify-start flex-row mt-5">
            <div class="flex justify-center items-center">
                <div class="pr-2">
                    <svg xmlns="http://www.w3.org/2000/svg" width="11" height="18" viewBox="0 0 11 18" fill="none">
                        <path d="M10.2352 0.740836C9.78601 0.29167 9.06184 0.29167 8.61268 0.740836L0.995176 8.35834C0.637676 8.71584 0.637676 9.29333 0.995176 9.65084L8.61268 17.2683C9.06184 17.7175 9.78601 17.7175 10.2352 17.2683C10.6843 16.8192 10.6843 16.095 10.2352 15.6458L3.59851 9L10.2443 2.35417C10.6843 1.91417 10.6843 1.18084 10.2352 0.740836Z" fill="#BCB08A" />
                    </svg>
                </div>
                <a class="text-[#292F33]" onclick="history.back()">
                    @CRS.CUSTOMER.APPLICATION.Resources.Resource.Back
                </a>
            </div>
        </div>
        <div class="pb-4">
            <p class="text-[#D75A8B] mt-[25px] font-[700]">
                @CRS.CUSTOMER.APPLICATION.Resources.Resource.Create_New_Password
            </p>
            <p>
                @CRS.CUSTOMER.APPLICATION.Resources.Resource.Set_up_a_new_password_to_login
            </p>
        </div>
        @using (Html.BeginForm("SetRegistrationPassword", "Home", FormMethod.Post, new { @role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.AgentId)
            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.MobileNumber)
            <div class="flex flex-wrap -mx-3 mb-6">
                <div class="w-full px-3 input-field ">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                           for="grid-password">
                        @CRS.CUSTOMER.APPLICATION.Resources.Resource.Password
                    </label>
                    @Html.TextBoxFor(model => model.Password, new { @class = "appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight ", @type = "password", @placeholder = @CRS.CUSTOMER.APPLICATION.Resources.Resource.Password, @maxlength = "16" })
                    <span class="validationMessage">
                        @Html.ValidationMessageFor(m => m.Password)
                    </span>

                    <label class="block uppercase pt-[20px] tracking-wide text-gray-700 text-xs font-bold mb-2"
                           for="grid-password">
                        @CRS.CUSTOMER.APPLICATION.Resources.Resource.Confirm_Password
                    </label>
                    @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight ", @type = "password", @placeholder = @CRS.CUSTOMER.APPLICATION.Resources.Resource.Confirm_Password, @maxlength = "16" })
                    <span class="validationMessage">
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </span>
                </div>
            </div>
            <div class="flex rounded-full justify-center items-center text-white h-[48px] mt-8 bg-[#D75A8B]  mx-[15px]">
                <button type="submit" name="submit" value="Next">
                    @CRS.CUSTOMER.APPLICATION.Resources.Resource.Confirm
                </button>
            </div>
        }
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script>
            //For toaster Notification
            $(function () {
            {
                @if (TempData["Notifications"] != null)
                {
                    var messages = (List<CRS.CUSTOMER.SHARED.NotificationModel>)TempData["Notifications"];
                    foreach (var note in messages)
                    {
                        <text>showNotification("@note.Message", "@note.Title", "@note.NotificationType");</text>
                    }

                }
                @{
                    ViewBag.Notifications = string.Empty;
                }
                }
            });
    </script>
</body>
</html>
