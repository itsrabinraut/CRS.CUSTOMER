@model CRS.CUSTOMER.APPLICATION.Models.Home.SetRegistrationPasswordModel
@{Layout = null;}
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/Content/assets/css/tailwind.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/global.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/club.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/customcss.css">
    <link rel="stylesheet" href="/Content/assets/css/owl-carousel/owl.carousel.min.css">
    <link rel="stylesheet" href="/Content/assets/css/owl-carousel/owl.theme.default.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.css" rel="stylesheet" />
    <script src="/Content/assets/js/owl.carousel.js"></script>
    <script src="/Content/assets/js/modal.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tw-elements/dist/css/tw-elements.min.css" />
    <link rel="stylesheet"
          href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
    <link rel="stylesheet"
          href="https://maxst.icons8.com/vue-static/landings/line-awesome/font-awesome-line-awesome/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/select2-bootstrap-css/1.4.6/select2-bootstrap.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js"></script>
    <script src="/Content/js/NotificationMessageToaster.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <title> 新規会員登録‖ホスログ《 ホストクラブ初回来店・ネット予約</title>
</head>
<body class="md:hidden">
    <style>
        .header {
            color: #18181B;
            margin-top: 12px;
            font-size: 16px;
            font-style: normal;
            font-weight: 700;
            line-height: 16px;
        }

        /* .inputWrapper {
            border: 1px solid #ECECEC;
            border-radius: 4px;
        } */

        .inputWrapper {
            border: 1px solid #ECECEC;
            border-radius: 4px;
        }

            .inputWrapper > input {
                border: none;
                outline: none;
                background: none;
            }

        /* .inputWrapper>input:focus {
            shape-outside: none;
            border: none;
            outline: none;

        } */

        input::placeholder {
            color: var(--silver, #A6A6A6);
            font-size: 12px;
            font-style: normal;
            font-weight: 400;
            line-height: 18px;
        }

        .nextButton {
            background: #D75A8B;
            padding: 8px 12px;
            color: #fff;
            font-weight: 700;
            line-height: 24px;
            font-size: 14px;
        }

        input::-ms-reveal,
        input::-ms-clear {
            display: none;
        }

        /*.message ul {
            list-style-type: none;
            padding-left: 10px;
        }

            .message ul li {
                margin-bottom: 5px;
                padding-left: 4px;
            }

                .message ul li::marker {
                    color: green;
                    margin-right: 1ch;
                    content: '✓';
                }

                .message ul li.error::marker {
                    color: red;
                    margin-right: 1ch;
                    content: 'X';
                }*/
        /* Remove default list styles and add padding */
        .message ul {
            list-style-type: none;
            padding-left: 10px;
        }

            /* Style for list items */
            .message ul li {
                margin-bottom: 5px;
                padding-left: 4px;
                position: relative;
            }

                /* Custom marker for successful items */
                .message ul li.success::before {
                    content: '✓'; /* Unicode character for checkmark */
                    color: green;
                    margin-right: 5px; /* Adjust as needed */
                }

                /* Custom marker for error items */
                .message ul li.error::before {
                    content: 'X'; /* Unicode character for cross mark */
                    color: red;
                    margin-right: 5px; /* Adjust as needed */
                }
    </style>

    <div>
        <!-- for back button -->
        <div class="flex items-center  border-b border-b-[#E8E8E8] sticky top-0 bg-white z-[10] relative px-4 py-[10px] h-[44px]">
            <div class="flex gap-2 items-center absolute top-[12px] text-sm" onclick="window.location.href='/login'">
                <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                    <path d="M15.2347 2.74084C14.7855 2.29167 14.0614 2.29167 13.6122 2.74084L5.99469 10.3583C5.63719 10.7158 5.63719 11.2933 5.99469 11.6508L13.6122 19.2683C14.0614 19.7175 14.7855 19.7175 15.2347 19.2683C15.6839 18.8192 15.6839 18.095 15.2347 17.6458L8.59802 11L15.2439 4.35417C15.6839 3.91417 15.6839 3.18084 15.2347 2.74084Z"
                          fill="#BCB08A" />
                </svg>戻る
            </div>
            <div class="text-center w-full font-bold"></div>
        </div>
        <!-- back button end -->
        <div class=" px-6">
            <div class="header">
                パスワードを作成する
            </div>
            @using (Html.BeginForm("SetRegistrationPassword", "Home", FormMethod.Post, new { @role = "form", @id = "Form" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.AgentId)
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.MobileNumber)
                @Html.HiddenFor(model => model.NickName)
                @Html.HiddenFor(model => model.ProcessId)
                <div class="relative inputWrapper mt-4 mb-[5px]">
                    @Html.TextBoxFor(model => model.Password, new { @class = "w-full focus:outline-none ring-0 focus:ring-0 focus:ring-transparent", @type = "password", @placeholder = "パスワード", @maxlength = "32", @id = "password" })
                    @*<input type="password"
                        class="w-full   focus:outline-none ring-0 focus:ring-0 focus:ring-transparent"
                        style="" placeholder="パスワード" name="password" required>*@
                    <i class="las la-eye password-eye absolute top-3 right-2 text-[#]" onclick="togglePassword()" required></i>
                </div>
                <ul id="messages" class="message"></ul>
                <div style="color:#666" id="error2" class="hidden text-[#666] text-[10px] font-[400]"></div>
                @*<span class="validationMessage">
                        @Html.ValidationMessageFor(m => m.Password)
                    </span>*@
                <div class="relative inputWrapper mt-2 mb-[5px]">
                    @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "w-full focus:outline-none ring-0 focus:ring-0 focus:ring-transparent", @type = "password", @placeholder = "パスワード確認", @maxlength = "32", @id = "confirmPassword", })
                    @*<input type="password"
                        class="w-full   focus:outline-none ring-0 focus:ring-0 focus:ring-transparent"
                        style="" placeholder="パスワード" name="password" required>*@
                    <i class="las la-eye password-eye absolute top-3 right-2 text-[#]" onclick="togglePassword()" required></i>
                </div>
                @*<span class="validationMessage">
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </span>*@
                <ul id="messagesConfirm" class="message"></ul>
                <div style="color:#666" id="error2" class="hidden text-[#666] text-[10px] font-[400]"></div>
                <!-- for next button  -->
                <div>
                    <button type="submit" class="nextButton border rounded-lg  w-full" id="submit_id">次</button>
                </div>
            }
        </div>
    </div>
    <script>
        document.querySelectorAll('.password-eye').forEach(function (eyeIcon) {
            eyeIcon.addEventListener('click', function () {
                togglePassword(this);
            });
        });
        function togglePassword(eyeIcon) {
            const passwordInput = eyeIcon.previousElementSibling; // Get the input element before the icon

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeIcon.classList.remove('la-eye');
                eyeIcon.classList.add('la-eye-slash');
            } else {
                passwordInput.type = 'password';
                eyeIcon.classList.remove('la-eye-slash');
                eyeIcon.classList.add('la-eye');
            }
        }
        $("#FormSubmit").click(function (event) {
            $("#Form").submit();
        });
        $('#submit_id').click('click', function () {
            $("#Form").submit();
        });</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script>
            //For toaster Notification
            $(function () {
            {
                @if (TempData["Notifications"] != null)
                {
                    var messages = (List<CRS.CUSTOMER.SHARED.NotificationModel>)TempData["Notifications"];
                    foreach (var note in messages)
                    {
                        <text>showNotification("@note.Message", "@note.Title", "@note.NotificationType");</text>
                    }

                }
                @{
                    ViewBag.Notifications = string.Empty;
                }
                }
            });
    </script>

    <script>
        const passwordInput = document.getElementById('password');
        const messagesElement = document.getElementById('messages');
        // validatePassword(); // Initial validation
        passwordInput.addEventListener('focus', function () {
            validatePassword();
        });
        passwordInput.addEventListener('input', function () {
            validatePassword();
        });
        passwordInput.addEventListener('focusout', function () {
            validatePassword(true);
        });
        function validatePassword(showMessage) {
            const password = passwordInput.value;
            const hasAlphanumeric = /^(?=.*[0-9])/.test(password);
            const hasUpperCase = /^(?=.*[A-Z])(?=.*\d).+$/.test(password);
            const hasLowerCase = /^(?=.*[a-z])(?=.*\d).+$/.test(password);
            const hasMinLength = password.length >= 8 && password.length <= 32;;
            const hasLetterAndDigit = /^(?=.*[a-z])(?=.*[A-Z]).+$/.test(password);
            const isStrongPassword = hasUpperCase && hasLowerCase && hasMinLength;
            if (showMessage && isStrongPassword) {
                messagesElement.innerHTML = '<ul><li class="success text-[10px] font-normal leading-[13.62px]" >パスワードは安全性が高いです</li></ul>';
                ispasswordstrong = true;
            } else {
                const messages = [
                    { valid: hasMinLength, message: '最小 8 文字以上、最大 32 文字以内にしてください' },
                    { valid: hasAlphanumeric, message: '1 つの数字を含めてください' },
                    { valid: hasUpperCase, message: '1 つの大文字を含めてください' },
                    { valid: hasLowerCase, message: '1 つの小文字を含めてください' },
                ];
                messagesElement.innerHTML = '<ul>' +
                    messages.map(({ valid, message }) => `<li class="${valid ? 'success' : 'error'} text-[10px] text-[#666] font-normal leading-[13.62px]">${message}</li>`).join('') +
                    '</ul>';
                ispasswordstrong = false;
            }
        }</script>
    <script>
        const passwordInput1 = document.getElementById('password');
        const confirm1 = document.getElementById('confirmPassword');
        const messagesElement1 = document.getElementById('messagesConfirm');
        confirm1.addEventListener("input", function () {
            const password = passwordInput1.value;
            const confirmPassword = confirm1.value;

            if (confirmPassword !== "" && password === confirmPassword) {
                messagesElement1.innerHTML = '<ul><li class="success text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致しています</li></ul>';
            } else {
                messagesElement1.innerHTML = '<ul><li class="error text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致していません</li></ul>';
            }
        });
        passwordInput1.addEventListener("input", function () {
            const password = passwordInput1.value;
            const confirmPassword = confirm1.value;
            if (confirmPassword !== "") {
                if (confirmPassword !== "" && password === confirmPassword) {
                    messagesElement1.innerHTML = '<ul><li class="success text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致しています</li></ul>';
                } else {
                    messagesElement1.innerHTML = '<ul><li class="error text-[10px] text-[#666] font-normal leading-[13.62px]">パスワードが一致していません</li></ul>';
                }
            }
        });</script>
</body>
</html>
