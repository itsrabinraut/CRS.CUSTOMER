@model CRS.CUSTOMER.APPLICATION.Models.Home.RegistrationModel
@{
    ViewBag.Title = "Forgot Password | OTP";
    Layout = null;
}
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hoslog | @ViewBag.Title</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="~/Content/assets/css/customer/global.css" rel="stylesheet" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="~/Content/js/NotificationMessageToaster.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&family=Noto+Sans+JP:wght@400;500;600;700;800&family=PT+Sans:wght@400;700&family=Poppins:wght@500;600;700&family=Roboto+Condensed:wght@500;600;700&family=Roboto:wght@400;500;700;900&display=swap" rel="stylesheet">
    <style>
        :root {
            /*font-family: 'Noto Sans JP', sans-serif;*/
            font-family: 'Noto Sans JP';
            color: #292f33;
            font-size: 16px;
        }
    </style>
    <style>
        .input-field {
            display: flex;
            gap: 16px;
            justify-content: center
        }

            .input-field input {
                height: 50px;
                width: 50px;
                border: 1px solid #D9D9D9;
                border-radius: 4px;
                text-align: center
            }

        .resend-div {
            display: none;
        }

        .resnd {
            color: maroon;
        }
    </style>
</head>
<body class="md:hidden">
    <div class="mx-[16px]">
        <div class="flex justify-start flex-row mt-5">
            <div class="flex justify-center items-center" onclick="window.location.href='@Url.Action("Index","Home")'">
                <div class="pr-2">
                    <svg xmlns="http://www.w3.org/2000/svg" width="11" height="18" viewBox="0 0 11 18" fill="none">
                        <path d="M10.2352 0.740836C9.78601 0.29167 9.06184 0.29167 8.61268 0.740836L0.995176 8.35834C0.637676 8.71584 0.637676 9.29333 0.995176 9.65084L8.61268 17.2683C9.06184 17.7175 9.78601 17.7175 10.2352 17.2683C10.6843 16.8192 10.6843 16.095 10.2352 15.6458L3.59851 9L10.2443 2.35417C10.6843 1.91417 10.6843 1.18084 10.2352 0.740836Z" fill="#BCB08A" />
                    </svg>
                </div>
                <a class="text-[#292F33]">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Back</a>
            </div>
        </div>
        <div class="pt-4">
            <p class="font-[500] text-[14px]"> @CRS.CUSTOMER.APPLICATION.Resources.Resource.Enter_6_digit_code_sent_in_sms</p>
            <p class="mt-2 mb-8 font-[600] ">+ 81- @Model.MobileNumber</p>
        </div>
        @using (Html.BeginForm("VerifyforgotpasswordOTP", "Home", FormMethod.Post, new { @role = "form", @id = "formSubmit" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.AgentId)
            @Html.HiddenFor(model => model.MobileNumber)
            <input type="hidden" name="exptime" id="exptime" value='@Html.Raw(Session["exptime"]!=null?Session["exptime"].ToString():"")' />
            <div class="input-field">
                <input type="text" id="OTP1" name="OTP1" onkeypress="return isNumber(event)" required />
                <input type="text" id="OTP2" name="OTP2" onkeypress="return isNumber(event)" disabled required />
                <input type="text" id="OTP3" name="OTP3" onkeypress="return isNumber(event)" disabled required />
                <input type="text" id="OTP4" name="OTP4" onkeypress="return isNumber(event)" disabled required />
                <input type="text" id="OTP5" name="OTP5" onkeypress="return isNumber(event)" disabled required />
                <input type="text" id="OTP6" name="OTP6" onkeypress="return isNumber(event)" disabled required />
            </div>
            <div class="resend-div-class">
                <p id="otp-code-timer" class="small text-muted mt-3"></p>
                <div class="mt-5 text-center resend-div" id="resend-div">
                    <div class="login-txt">
                        <a href="#" id="resend-verification-code" class="disable-link resnd"> @CRS.CUSTOMER.APPLICATION.Resources.Resource.Request_a_new_code</a>
                    </div>
                </div>
            </div>
            <div class="flex justify-center mt-6">
                <button name="submit" id="valCod" value="Next" class="btn btn-primary rounded-[44px] ">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Next</button>
            </div>
        }
    </div>
    <script>
        const inputs = document.querySelectorAll("input"),
            button = document.querySelector("button");


        inputs.forEach((input, index1) => {
            input.addEventListener("keyup", (e) => {
                const currentInput = input,
                    nextInput = input.nextElementSibling,
                    prevInput = input.previousElementSibling;
                if (currentInput.value.length > 1) {
                    currentInput.value = "";
                    return;
                }
                if (nextInput && nextInput.hasAttribute("disabled") && currentInput.value !== "") {
                    nextInput.removeAttribute("disabled");
                    nextInput.focus();
                }
                if (e.key === "Backspace") {

                    inputs.forEach((input, index2) => {

                        if (index1 <= index2 && prevInput) {
                            input.setAttribute("disabled", true);
                            input.value = "";
                            prevInput.focus();
                        }
                    });
                }
                if (!inputs[3].disabled && inputs[3].value !== "") {
                    button.classList.add("active");
                    return;
                }
                button.classList.remove("active");
            });
        });
        window.addEventListener("load", () => inputs[0].focus());

        //For toaster Notification
$(function () {
{
    @if (TempData["Notifications"] != null)
    {
        var messages = (List<CRS.CUSTOMER.SHARED.NotificationModel>)TempData["Notifications"];
        foreach (var note in messages)
        {
            <text>showNotification("@note.Message", "@note.Title", "@note.NotificationType");</text>
        }
    }
    @{
        ViewBag.Notifications = string.Empty;
    }
    }
});
    </script>

    @*<script src="~/Content/javascript/frontendvalidator/otpvalidator.js"></script>*@
    <script src="~/Content/validation.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        $(function () {
         var today = new Date();
         var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();
         var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
         var dateTime = date + ' ' + time;
         countdown($("#exptime").val());
             $("#resend-verification-code").click(function (e) {
                 e.preventDefault();
                 $(this).addClass('disable-link');
                 $("#resend-div").addClass('resend-div');
                 var RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
                 var MobileNo = $('input[name="MobileNo"]').val();
                 $.ajax({
                     type: "POST",
                     url: '@Url.Action("ResendFPOTP", "Home")',
                     data: {
                         '__RequestVerificationToken': RequestVerificationToken, 'MobileNumber': '@Model.MobileNumber', 'AgentId': '@Model.AgentId'},
                     success: function (result) {
                         //location.reload();
                         if (result.code == "0") {
                             $("#exptime").val(result.ExpTime);
                             countdown(result.ExpTime);
                             $("#resend-div-class").hide();
                             toastr.success(result.message);
                         }
                         else {
                             toastr.info(result.message);
                         }
                     },
                     error: function (error) {
                     }
                 })
             });
        });
        function countdown(endtime) {
             // Set the date we're counting down to
            var countDownDate = new Date(endtime).getTime();
             // Update the count down every 1 second
             var x = setInterval(function () {
                 // Get today's date and time
                 //var now = new Date().getTime();
                 var now = new Date();
                 // Find the distance between now and the count down date
                 var distance = countDownDate - now;
                 // Time calculations for days, hours, minutes and seconds
                 var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                 var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                 var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                 var seconds = Math.floor((distance % (1000 * 60)) / 1000);
                 // Display the result in the element with id="demo"
                 document.getElementById("otp-code-timer").innerHTML = "Your code will expire in " + minutes + "m " + seconds + "s ";
                 // If the count down is finished, write some text
                 if (distance < 0) {
                     clearInterval(x);
                     $("#resend-div").removeClass('resend-div');
                     $("#resend-verification-code").removeClass('disable-link');
                     document.getElementById("otp-code-timer").innerHTML = "あなたの認証コードは期限切れです。再送してください。";//= "Your code is expired. Please resend.";
                 }
             }, 1000);
         }
    </script>
    <script>

    </script>
</body>
</html>
