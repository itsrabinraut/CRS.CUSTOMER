@using Newtonsoft.Json

@functions {
    public dynamic ReadJson()
    {
        string filePath = HttpContext.Current.Server.MapPath("~/App_Data/RedirectURLConfiguration.json");
        string jsonContent = System.IO.File.ReadAllText(filePath);
        var jsonData = JsonConvert.DeserializeObject<dynamic>(jsonContent);
        return jsonData;
    }
}
@{
    var jsonData = ReadJson();
}


@model CRS.CUSTOMER.APPLICATION.Models.Home.RegistrationHoldModel
@{
    ViewBag.Title = "新規会員登録‖ホスログ《 ホストクラブ初回来店・ネット予約 》";
    Layout = "";
}

<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/Content/assets/css/tailwind.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/global_v1.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/club.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/customcss.css">
    <link rel="stylesheet" href="/Content/assets/css/owl-carousel/owl.carousel.min.css">
    <link rel="stylesheet" href="/Content/assets/css/owl-carousel/owl.theme.default.min.css">
    <link rel="stylesheet" href="/Content/assets/css/customer/responsive.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.css" rel="stylesheet" />
    <script src="/Content/assets/js/owl.carousel.js"></script>
    <script src="/Content/assets/js/modal.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tw-elements/dist/css/tw-elements.min.css" />
    <link rel="stylesheet"
          href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
    <link rel="stylesheet"
          href="https://maxst.icons8.com/vue-static/landings/line-awesome/font-awesome-line-awesome/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/select2-bootstrap-css/1.4.6/select2-bootstrap.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js"></script>
    <script src="/Content/js/NotificationMessageToaster.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <title>@ViewBag.Title</title>
</head>

<body class="md:hidden">
    <style>
        @@media(width > 639px) {
            .borderTop {
                border-top: 1px solid #ECECEC;
                max-width: 375px;
                box-shadow: 0px 0px 24px 0px #0d102e40;
            }
        }

        .loginContainer {
            padding: 0 24px;
            background: #fdfdfd;
            height: 100vh;
        }

        .register {
            color: #18181B;
            font-weight: 700;
            line-height: 16px;
            font-size: 16px;
            padding-top: 16px;
            padding-bottom: 16px;
        }

        .inputWrapper {
            border: 1px solid #ECECEC;
            border-radius: 4px;
        }

            .inputWrapper > input {
                border: none;
                outline: none;
                background: none;
            }

                .inputWrapper > input :focus {
                    shape-outside: none;
                    border: none;
                    outline: none;
                }

                .inputWrapper > input::placeholder {
                    color: #A6A6A6;
                    font-size: 12px;
                    font-style: normal;
                    font-weight: 400;
                    line-height: 18px;
                }

        .policy {
            color: #151B2C;
            font-size: 12px;
            font-style: normal;
            font-weight: 400;
            line-height: 16px;
        }

            .policy > span {
                color: #839AD6;
                font-size: 12px;
                font-style: normal;
                font-weight: 600;
                line-height: 16px;
                /* 133.333% */
            }

        .forgetPassword {
            color: #839AD6;
            font-size: 10px;
            font-style: normal;
            font-weight: 700;
            line-height: 16px;
            letter-spacing: 0.4px;
        }


        .registerButton {
            color: #fff;
            font-size: 14px;
            font-style: normal;
            font-weight: 700;
            line-height: 24px;
            border-radius: 8px;
            background: #D75A8B;
            padding: 8px 12px;
            margin-top: 30px;
        }

        /*FOR NEW END*/
        .loginButton {
            background: #FFF;
            padding: 8px 12px;
            color: #666;
            font-weight: 600;
            line-height: 23px;
            font-size: 14px;
            margin-top: 18px;
            border: 1px solid #F1F1F1;
            letter-spacing: -0.165px;
        }

        .termsAndContion {
            color: rgba(24, 24, 27, 0.60);
            font-weight: 700;
        }

        .termLink {
            color: #839AD6;
            font-size: 11px;
        }

        .spertator {
            /* width: 20%; */
            width: calc((100% - 185px)/2);
            height: 1px;
            background-color: #A1A1AA;
        }

        .otherAccotunt {
            color: #666;
            text-align: center;
            font-size: 12px;
            font-style: normal;
            font-weight: 500;
            line-height: 166%;
            padding: 0 13px;
            white-space: nowrap;
        }

        .affiliation {
            display: flex;
            padding: 4px 0px;
            justify-content: center;
            align-items: center;
            gap: 8px;
            margin-top: 18px;
        }

        .affiliationText {
            color: #839AD6;
            text-align: center;
            font-size: 12px;
            font-style: normal;
            font-weight: 700;
            line-height: 166%;
            display: none;
        }

        .dividerCol {
            color: #999;
            text-align: center;
            font-size: 11px;
            font-style: normal;
            font-weight: 700;
            line-height: 166%;
            display: none;
            /* 18.26px */
        }

        .smsText {
            color: #18181B;
            text-align: center;
            font-size: 12px;
            font-style: normal;
            font-weight: 500;
            line-height: 16px;
            letter-spacing: 0.4px;
            margin-top: 18px;
        }

        .checkBox {
            border: 0.5px solid #D9D9D9;
            border-radius: 1.5px;
            color: #D75A8B;
        }

            .checkBox:focus {
                border: 0.5px solid #D9D9D9;
                border-radius: 1.5px;
            }

        input {
            --tw-ring-shadow: 0 0 #000 !important;
        }
    </style>
    <div id="lgoinWrapper">
        <div id="leftcontent" style="margin-top: 30%; " class="flex  flex-col items-center ">
            <div id="leftfix" class="fixed">
                <div class="flex flex-row justify-center">
                    <img src="~/content/assets/images/bglogo.png" />
                </div>
                <div id="siteurl" class="flex flex-row justify-center">
                    <p style="font-size: 25px; font-weight: 600; margin-bottom: 26px" class="text-black">https://hoslog.jp/  </p>
                </div>

                <a href="@jsonData.CustomerRegistration.url" style="max-width: 300px; height: 57px; background-color: #D75A8B; border-radius: 2px; cursor: pointer; " class="flex flex-row justify-center items-center text-center">
                    <div>
                        <p style="font-size:18px;font-weight:600 ; " class="text-white">@jsonData.CustomerRegistration.text</p>
                    </div>
                </a>
                <a href="@jsonData.ClubRegistration.url" target="blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor: pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
                    <div>
                        <p style="font-size:18px;font-weight:600" class="text-black">@jsonData.ClubRegistration.text</p>
                    </div>
                </a>
                <a href="@jsonData.AffiliateRegistration.url" target="blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor:pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
                    <div>
                        <p style="font-size:18px;font-weight:600" class="text-black">@jsonData.AffiliateRegistration.text</p>
                    </div>
                </a>

                @*  <a href="https://hoslog.jp/user/register" style="max-width: 300px; height: 57px; background-color: #D75A8B; border-radius: 2px; cursor: pointer; " class="flex flex-row justify-center items-center text-center">
            <div>
                <p style="font-size:18px;font-weight:600 ; " class="text-white">新規会員登録</p>
            </div>
        </a>
        <a href="https://owner.hoslog.jp/owner/register/" target="blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor: pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
            <div>
                <p style="font-size:18px;font-weight:600" class="text-black">店舗オーナー登録</p>
            </div>
        </a>
        <a href="https://affiliate.hoslog.jp/auth/register" target="blank" style="max-width: 300px; height: 57px; border-radius: 2px; box-shadow: 0px 0px 12px 0px rgba(30, 34, 75, 0.15); cursor:pointer; " class="flex flex-row justify-center items-center bg-white mt-3">
            <div>
                <p style="font-size:18px;font-weight:600" class="text-black">アフィリエイター登録</p>
            </div>
        </a>*@
            </div>


        </div>
        @*left container end *@

        <div class="borderTop">
            <!-- for back button -->
            <div class="flex items-center  border-b border-b-[#E8E8E8] sticky top-0 bg-white z-[10] relative px-4 py-[10px] h-[44px]">
                <div class="flex gap-2 items-center absolute top-[12px] text-sm" onclick="window.location.href='/login'">
                    <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                        <path d="M15.2347 2.74084C14.7855 2.29167 14.0614 2.29167 13.6122 2.74084L5.99469 10.3583C5.63719 10.7158 5.63719 11.2933 5.99469 11.6508L13.6122 19.2683C14.0614 19.7175 14.7855 19.7175 15.2347 19.2683C15.6839 18.8192 15.6839 18.095 15.2347 17.6458L8.59802 11L15.2439 4.35417C15.6839 3.91417 15.6839 3.18084 15.2347 2.74084Z"
                              fill="#BCB08A" />
                    </svg>戻る
                </div>
                <div class="text-center w-full font-bold"></div>
            </div>
            <!-- back button end -->
            <div class="loginContainer">
                <div class="register">新しくホスログを始める</div>
                @using (Html.BeginForm("register", "user", FormMethod.Post, new { @role = "form", @id = "Form" }))
                {
                    @Html.AntiForgeryToken()
                    <input value="@ViewBag.ReferCode" name="ReferCode" hidden />
                    <input value="@ViewBag.Type" name="Type" hidden />
                    <div class="inputWrapper">
                        @Html.TextBoxFor(model => model.NickName, new { @class = "focus:outline-none w-full ring-0 focus:ring-0 focus:ring-transparent", @placeholder = "ニックネーム", @id = "japaneseInput", @oninput = "validateInput(this)", autocomplete = "off", @maxlength = "20" })
                    </div>
                    <span class="validationMessage">
                        @Html.ValidationMessageFor(m => m.NickName, "", new { @class = "error-validation-msg" })
                    </span>
                    <div class="inputWrapper mt-2">
                        @Html.TextBoxFor(model => model.MobileNumber, new { @class = "w-full ring-0 focus:ring-0 focus:ring-transparent", @type = "number", @placeholder = "携帯電話番号", @minlength = "11", @id = "numberInput", @maxlength = "11", oninput = "limitInputLength(this, 11)", autocomplete = "off" })
                    </div>
                    <span class="validationMessage">
                        @Html.ValidationMessageFor(m => m.MobileNumber, "", new { @class = "error-validation-msg" })
                    </span>
                    <!-- for check box -->
                    <div class="checkbox mt-4">
                        <div class="flex justify-start items-start gap-2">
                            <input type="checkbox" name="policy" id="policy" class="checkBox focus:outline-none bg-none ring-offset-0 ring-0 focus:ring-0 focus:ring-transparent focus:ring-shadow-none">
                            <label for="policy" class="policy ">
                                <span>  <a href="/rule" target="blank"> 利用規約 </a></span> と <span> <a href="/policy" target="blank"> プライバシーポリシー </a></span> に同意したものとみなします
                            </label>
                        </div>
                    </div>
                    <!-- for sms message -->
                    <div class="smsText">
                        SMSの受信設定をご確認の上、ボタンを押してください
                    </div>
                    <!-- for register  -->
                    <div>
                        <button id="FormSubmit" type="button" class="registerButton border rounded-lg  w-full ">認証コードを受け取る</button>
                    </div>
                }
                <!-- for login -->
                <div class="mt-3 flex justify-center items-center">
                    <div class="border  spertator"></div>
                    <span class="otherAccotunt" style="text-transform:uppercase ">既にアカウントをお持ちですか <span style="font-size:14px">?</span></span>
                    <div class="border  spertator"></div>
                </div>
                <!-- for login -->
                <div onclick="window.location.href='/login'">
                    <button type="submit" class="loginButton border rounded-lg  w-full">ログイン</button>
                </div>

                @*FOR NEW REGISTRATION BUTTON *@
                @*REGISTRATION BUTTON END*@
                <!-- for affiliation -->
                <div class="affiliation">
                    <div class="affiliationText"><a href="#" style="">アフィリエイター登録</a></div>
                    <div class="dividerCol">|</div>
                    <div class="affiliationText" style="">店舗オーナー登録</div>
                </div>
            </div>
        </div>
        <div id="rightcontent" style="margin-top: 10%; " class="flex flex-col items-center">
            <div id="innerfixed" class="fixed   flex flex-col gap-2">
                @* <div >*@
                <img src="../../content/assets/images/hpi1.jpeg" style="width:inherit" />
                @* </div>
                    <div>*@
                <img src="../../content/assets/images/hpi2.jpeg" style="width:inherit" />
                @*  </div>
                    <div>*@
                <img src="../../content/assets/images/hpi3.jpeg" style="width:inherit" />
                @*</div>
                    <div>*@
                <img src="../../content/assets/images/hpi4.jpeg" style="width:inherit" />
                @*  </div>
                    <div>*@
                <img src="../../content/assets/images/hpi5.jpeg" style="width:inherit" />
                @* </div>
                    <div>*@
                <img src="../../content/assets/images/hpi6.jpeg" style="width:inherit" />
                @*  </div>*@
            </div>

        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script type="text/javascript">

        $("#FormSubmit").click(function (event) {
            event.preventDefault();
            var MobileNumber = $('#MobileNumber').val();
            var NickName = $('#NickName').val();
            var checkbox = document.getElementById("policy");
            var ischecked = checkbox.checked;
            if (MobileNumber != "" && NickName != "" && ischecked) {
                $("#Form").submit();
            }
            if (MobileNumber == "" && NickName == "") {
                event.preventDefault();
                $('span[data-valmsg-for="MobileNumber"]').addClass("field-validation-valid");
                $('span[data-valmsg-for="MobileNumber"]').addClass("field-validation-error").html("この項目は必須です");
                $('span[data-valmsg-for="NickName"]').addClass("field-validation-valid");
                $('span[data-valmsg-for="NickName"]').addClass("field-validation-error").html("この項目は必須です");
                return false;
            }
            if (MobileNumber == "") {
                event.preventDefault();
                $('span[data-valmsg-for="MobileNumber"]').addClass("field-validation-valid");
                $('span[data-valmsg-for="MobileNumber"]').addClass("field-validation-error").html("この項目は必須です");
                return false;
            }
            else {
                $('span[data-valmsg-for="MobileNumber"]').addClass("field-validation-valid");
                $('span[data-valmsg-for="MobileNumber"]').addClass("field-validation-error").html("");
            }
            if (NickName == "") {
                event.preventDefault();
                $('span[data-valmsg-for="NickName"]').addClass("field-validation-valid");
                $('span[data-valmsg-for="NickName"]').addClass("field-validation-error").html("この項目は必須です");
                return false;
            }
        });

        /*   function validateInput(input) {

               // Regular expression pattern to allow only alphabets (English letters), numbers, underscores, periods, hyphens, and Japanese characters
               var regex = /^[a-zA-Z0-9\u3040-\u309f\u30a0-\u30ff]{4,}$/u;


               // Check if the input value matches the pattern
               if (!regex.test(input.value)) {
                   // Clear the input value if it doesn't match the pattern
                   input.value = input.value.replace(/[^a-zA-Z0-9\u3040-\u309f\u30a0-\u30ff]/gu, "");
               }
           }*/
        let isComposing = false;

        /* function validateInput(input) {
             // Regular expression pattern to allow only alphabets (English letters), numbers, underscores, periods, hyphens, and Japanese characters
             var regex = /[一-龠ぁ-ゔァ-ヴーa-zA-Z0-9._-]/u;

             // Check if currently composing text (IME active)
             if (!isComposing) {
                 // Check if the input value matches the pattern
                 if (!regex.test(input.value)) {
                     // Clear the input value if it doesn't match the pattern
                     input.value = input.value.replace(/[一-龠ぁ-ゔァ-ヴーa-zA-Z0-9._-　]/gu, "");
                 }
             }


             // Event listener for composition events to track IME state
             document.addEventListener('compositionstart', function () {
                 isComposing = true;
             });

             document.addEventListener('compositionend', function () {
                 isComposing = false;
                 // Trigger validation after composition ends
                 validateInput(document.getElementById('japaneseInput'));
             });

             // Event listener for input field changes
             document.getElementById('japaneseInput').addEventListener('input', function () {
                 validateInput(this);
             });
         }*/

        /* let isComposing = false;*/

        function validateInput(input) {
            // Regular expression pattern to allow only alphabets (English letters), numbers, underscores, periods, hyphens, and Japanese characters
            var regex = /^[一-龠ぁ-ゔァ-ヴーa-zA-Z0-9._-]+$/u;

            // Check if currently composing text (IME active)
            if (!isComposing) {
                // Check if the input value matches the pattern
                if (!regex.test(input.value)) {
                    // Clear the input value if it doesn't match the pattern
                    input.value = input.value.replace(/[^一-龠ぁ-ゔァ-ヴーa-zA-Z0-9._-]/gu, "");
                }
            }
        }

        // Event listener for composition events to track IME state
        document.addEventListener('compositionstart', function () {
            isComposing = true;
        });

        document.addEventListener('compositionend', function () {
            isComposing = false;
            // Trigger validation after composition ends
            validateInput(document.getElementById('japaneseInput'));
        });

        // Event listener for input field changes
        document.getElementById('japaneseInput').addEventListener('input', function () {
            validateInput(this);
        });

    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const japaneseInput = document.getElementById('japaneseInput');
            const numberInput = document.getElementById('numberInput');
            const policyCheckbox = document.getElementById('policy');
            const submitButton = document.getElementById('FormSubmit');

            function updateButtonState() {
                const japaneseInputValue = japaneseInput.value;
                const numberInputValue = numberInput.value;
                const isPolicyChecked = policyCheckbox.checked;
                const isJapaneseInputValid = /^[一-龠ぁ-ゔァ-ヴーa-zA-Z0-9._-]+$/u.test(japaneseInputValue);
                const isNumberInputValid = /^[0-9]+$/u.test(numberInputValue);

                if (japaneseInputValue === "" || numberInputValue === "" || !isPolicyChecked || !isJapaneseInputValid || !isNumberInputValid) {
                    submitButton.classList.add('disabled');
                    submitButton.disabled = true;
                } else {
                    submitButton.classList.remove('disabled');
                    submitButton.disabled = false;
                }
            }

            japaneseInput.addEventListener('compositionstart', function () {
                isComposing = true;
            });

            japaneseInput.addEventListener('compositionend', function () {
                isComposing = false;
                updateButtonState();
            });

            japaneseInput.addEventListener('input', updateButtonState);
            numberInput.addEventListener('input', updateButtonState);
            policyCheckbox.addEventListener('change', updateButtonState);

            updateButtonState();
        });

        /*  function updateButtonState() {
              const japaneseInput = $('#japaneseInput').val();
              const numberInput = $('#numberInput').val();
              const isPolicyChecked = $('#policy').is(':checked');
              const isJapaneseInputValid = /^[一-龠ぁ-ゔァ-ヴーa-zA-Z0-9._-]+$/u.test(japaneseInput);
              const isNumberInputValid = /^[0-9]+$/u.test(numberInput);

              if (japaneseInput == "" || numberInput == "" || !isPolicyChecked) {

                  $('#FormSubmit').addClass('disabled');
              } else {
                  $('#FormSubmit').removeClass('disabled');
              }
          }
          $(document).ready(function () {

              $('#japaneseInput').on('compositionstart', function () {
                  isComposing = true;
              });

              $('#japaneseInput').on('compositionend', function () {
                  isComposing = false;

                  updateButtonState();
              });


              $('#japaneseInput').on('change', function () {

                  updateButtonState();
              });

              $('#numberInput').on('change', function () {
                  validateNumberInput(this);
                  updateButtonState();
              });


              updateButtonState();
          });*/
    </script>
    <script src="~/Content/validation.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function limitInputLength(input, maxLength) {
            var value = input.value;
            // Remove non-numeric characters
            var numericValue = value.replace(/\D/g, '');
            // Trim to maximum length
            var trimmedValue = numericValue.substring(0, maxLength);
            // Update input value
            input.value = trimmedValue;
        }
    //For toaster Notification
    $(function () {
    {
        @if (TempData["Notifications"] != null)
        {
            var messages = (List<CRS.CUSTOMER.SHARED.NotificationModel>)TempData["Notifications"];
            foreach (var note in messages)
            {
                <text>showNotification("@note.Message", "@note.Title", "@note.NotificationType");</text>
            }

        }
        @{
            ViewBag.Notifications = string.Empty;
        }
        }
    });
    </script>
</body>
</html>