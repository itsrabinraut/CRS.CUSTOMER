@model CRS.CUSTOMER.APPLICATION.Models.ReservationManagement.PaymentMethodDetailModel
@{
    ViewBag.Title = "Payment Method";
    Layout = "~/Views/Shared/_Reservation-Layout.cshtml";
}

<div class="flex justify-between flex-col bg-[#F8F8F8] relative h-screen overflow-hidden">
    <div class="no-scrollbar overflow-y-scroll pb-[80px]">
        <div class="flex items-center border-t-[2px] border-t-[#C8B477] border-b border-b-[#E8E8E8] sticky top-0 bg-white z-[10] relative px-4 py-[10px] h-[44px]">
            <div class="flex gap-2 items-center absolute top-[12px] left-4 text-sm" onclick="history.go(-1); return false;">
                <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                    <path d="M15.2347 2.74084C14.7855 2.29167 14.0614 2.29167 13.6122 2.74084L5.99469 10.3583C5.63719 10.7158 5.63719 11.2933 5.99469 11.6508L13.6122 19.2683C14.0614 19.7175 14.7855 19.7175 15.2347 19.2683C15.6839 18.8192 15.6839 18.095 15.2347 17.6458L8.59802 11L15.2439 4.35417C15.6839 3.91417 15.6839 3.18084 15.2347 2.74084Z"
                          fill="#BCB08A" />
                </svg><a class="text-[#292F33]">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Back</a>
            </div>
            <div class="text-center w-full font-bold">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Hoslog</div>

        </div>

        <div class="py-[8px] px-4 bg-[#E5E5E5] text-xs font-bold">
            @CRS.CUSTOMER.APPLICATION.Resources.Resource.PleaseSelectAPaymentMethod.ToUpper()
        </div>

        <div class="px-4 py-[12px] grid gap-[6px] ">

            <div class="text-primary text-xs font-semibold">@CRS.CUSTOMER.APPLICATION.Resources.Resource.ReservationContents.ToUpper()</div>
            <div class="bg-[#FAFAFA] border border-[#D8D8D8] p-[12px] grid gap-[12px]">
                <div>
                    <div class="text-xs font-bold flex gap-1"><div class="w-[90px]">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Username.ToUpper() :</div> <span class="pl-2 font-normal">@Model.CustomerDetail</span></div>
                </div>
                <div>
                    <div class="text-xs font-bold flex gap-1">
                        <div class="w-[90px]">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Time.ToUpper() :</div>
                        <span class="pl-2 font-normal"> @Model.ReservationDetail</span>
                    </div>
                </div>
                <div>
                    <div class="text-xs font-bold flex gap-1"> <div class="w-[90px]">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Plan.ToUpper() : </div> <span class="pl-2 font-normal">@Model.PlannDetail</span></div>
                </div>
            </div>
            <div>
                <p class="text-xs pt-1">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Total.ToUpper() : <span class="text-xs font-bold pl-2">@Model.TotalAmount 円</span></p>
            </div>

        </div>
        <div class="px-4 py-[12px] grid border-t border-[#EFEFEF] ">
            <div class="text-[#383232] text-xs">@CRS.CUSTOMER.APPLICATION.Resources.Resource.PaymentOptions.ToUpper()</div>
            <div class="pt-[8px] grid gap-4 payment-type-class">
                @{
                    foreach (KeyValuePair<string, string> item in ViewBag.PaymentMethodList as Dictionary<string, string>)
                    {
                        var disabledClass = "";
                        //if (!string.IsNullOrEmpty(item.Value) && (item.Value.Trim().ToUpper() == "STRIPE" || item.Value.Trim().ToUpper() == "クレジットカード"))
                        //{
                        //    disabledClass = "disabled";
                        //}
                        if (!string.IsNullOrEmpty(item.Value) && (item.Value.Trim().ToUpper() != "STRIPE" && item.Value.Trim().ToUpper() != "クレジットカード"))
                        {
                            <div class="payment-option @disabledClass">
                                <div class="circle">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                                        <path d="M11 5C7.688 5 5 7.688 5 11C5 14.312 7.688 17 11 17C14.312 17 17 14.312 17 11C17 7.688 14.312 5 11 5ZM11 15.8C8.354 15.8 6.2 13.646 6.2 11C6.2 8.354 8.354 6.2 11 6.2C13.646 6.2 15.8 8.354 15.8 11C15.8 13.646 13.646 15.8 11 15.8Z"
                                              fill="#ECECEC" />
                                    </svg>
                                </div>
                                <div class="circle-active">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                                        <path d="M11 5C7.688 5 5 7.688 5 11C5 14.312 7.688 17 11 17C14.312 17 17 14.312 17 11C17 7.688 14.312 5 11 5ZM11 15.8C8.354 15.8 6.2 13.646 6.2 11C6.2 8.354 8.354 6.2 11 6.2C13.646 6.2 15.8 8.354 15.8 11C15.8 13.646 13.646 15.8 11 15.8Z"
                                              fill="#ECECEC" />
                                        <path d="M11 7C8.792 7 7 8.792 7 11C7 13.208 8.792 15 11 15C13.208 15 15 13.208 15 11C15 8.792 13.208 7 11 7Z"
                                              fill="#D75A8B" />
                                    </svg>
                                </div>
                                @Html.HiddenFor(model => item.Key, new { @id = "", @class = "payment-option-value" })
                                @item.Value
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
    <div class="py-[11px] px-4 flex gap-2 h-[64px] shadow-reservation absolute bottom-0 left-0 w-full bg-white">
        <button class="btn" onclick="history.back()">
            <a class="text-[#292F33]">@CRS.CUSTOMER.APPLICATION.Resources.Resource.Back</a>
        </button>
        <button class="btn btn-primary" onclick="SubmitFunction();">
            <a class="h-full w-full">
                @CRS.CUSTOMER.APPLICATION.Resources.Resource.Next
            </a>
        </button>
    </div>
</div>
@section scripts
{
    <script>
        // Get all the div elements
        var divs = document.querySelectorAll('.payment-option');
        // Add click event listeners to each div
        divs.forEach(function (div) {
            div.addEventListener('click', function () {
                if (!this.classList.contains("disabled")) {
                    // Remove the 'bg-red' class from all divs
                    divs.forEach(function (d) {
                        d.classList.remove('active');
                    });
                    // Add the 'bg-red' class to the clicked div
                    this.classList.add('active');
                }
            });
        });
    </script>
    <script>
        function SubmitFunction() {
            var ReservationId = '@Model.ReservationId';
            var PaymentType = $('.payment-type-class .active .payment-option-value').val();
            if (PaymentType === null || PaymentType === "" || PaymentType === undefined) {
                toastr.info('Payment type is required');
                return false;
            }
            window.location.href = "/LocationManagement/PaymentMethodConfirmation?ReservationId=" + ReservationId + "&&PaymentType=" + PaymentType;
        }
    </script>
}